openapi: 3.1.0
info:
  title: My awesome API
  version: 0.5.0
  description: My awesome API created with ZenStack
  summary: Created with ZenStack
tags:
  - name: account
    description: Account operations
  - name: session
    description: Session operations
  - name: user
    description: User operations
  - name: verificationToken
    description: VerificationToken operations
  - name: space
    description: Space operations
  - name: spaceUser
    description: SpaceUser operations
  - name: list
    description: List operations
  - name: todo
    description: Todo operations
  - name: collection
    description: Collection operations
  - name: collectionCard
    description: CollectionCard operations
  - name: tcgApiSet
    description: TcgApiSet operations
  - name: tcgApiCard
    description: TcgApiCard operations
components:
  schemas:
    SpaceUserRole:
      type: string
      enum:
        - USER
        - ADMIN
    AccountScalarFieldEnum:
      type: string
      enum:
        - id
        - userId
        - type
        - provider
        - providerAccountId
        - refresh_token
        - access_token
        - expires_at
        - token_type
        - scope
        - id_token
        - session_state
    SessionScalarFieldEnum:
      type: string
      enum:
        - id
        - sessionToken
        - userId
        - expires
    UserScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - email
        - password
        - emailVerified
        - image
    VerificationTokenScalarFieldEnum:
      type: string
      enum:
        - identifier
        - token
        - expires
    SpaceScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - name
        - slug
    SpaceUserScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - spaceId
        - userId
        - role
    ListScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - spaceId
        - ownerId
        - title
        - private
    TodoScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - ownerId
        - listId
        - title
        - completedAt
    CollectionScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - ownerId
        - tcgApiFilter
        - collecting_variations
        - cardSort
        - cardApiOrderBy
    CollectionCardScalarFieldEnum:
      type: string
      enum:
        - id
        - collectionId
        - tcgApiCardId
        - index
        - owned
        - ownedVariation
        - awaitingOwnership
        - awaitingOwnershipVariation
    TcgApiSetScalarFieldEnum:
      type: string
      enum:
        - id
        - tcgSetId
        - name
        - series
        - printedTotal
        - total
        - legalities
        - ptcgoCode
        - releaseDate
        - updatedAt
        - images
        - requiresCardUpdate
    TcgApiCardScalarFieldEnum:
      type: string
      enum:
        - id
        - cardTcgId
        - setTcgId
        - name
        - supertype
        - subtypes
        - hp
        - types
        - evolvesFrom
        - evolvesTo
        - rules
        - ancientTrait
        - abilities
        - attacks
        - weaknesses
        - resistances
        - retreatCost
        - convertedRetreatCost
        - number
        - artist
        - rarity
        - flavorText
        - nationalPokedexNumbers
        - legalities
        - images
        - setLib
        - setId
    SortOrder:
      type: string
      enum:
        - asc
        - desc
    NullableJsonNullValueInput:
      type: string
      enum:
        - DbNull
        - JsonNull
    JsonNullValueInput:
      type: string
      enum:
        - JsonNull
    QueryMode:
      type: string
      enum:
        - default
        - insensitive
    NullsOrder:
      type: string
      enum:
        - first
        - last
    JsonNullValueFilter:
      type: string
      enum:
        - DbNull
        - JsonNull
        - AnyNull
    Account:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
        - userId
        - type
        - provider
        - providerAccountId
        - user
    Session:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
        - sessionToken
        - userId
        - expires
        - user
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/Account"
        sessions:
          type: array
          items:
            $ref: "#/components/schemas/Session"
        spaces:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUser"
        todos:
          type: array
          items:
            $ref: "#/components/schemas/Todo"
        lists:
          type: array
          items:
            $ref: "#/components/schemas/List"
        collection:
          type: array
          items:
            $ref: "#/components/schemas/Collection"
      required:
        - id
        - password
    VerificationToken:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - identifier
        - token
        - expires
    Space:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        slug:
          type: string
        members:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUser"
        lists:
          type: array
          items:
            $ref: "#/components/schemas/List"
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - slug
    SpaceUser:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        space:
          $ref: "#/components/schemas/Space"
        spaceId:
          type: string
        user:
          $ref: "#/components/schemas/User"
        userId:
          type: string
        role:
          $ref: "#/components/schemas/SpaceUserRole"
      required:
        - id
        - createdAt
        - updatedAt
        - space
        - spaceId
        - user
        - userId
        - role
    List:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        space:
          $ref: "#/components/schemas/Space"
        spaceId:
          type: string
        owner:
          $ref: "#/components/schemas/User"
        ownerId:
          type: string
        title:
          type: string
        private:
          type: boolean
        todos:
          type: array
          items:
            $ref: "#/components/schemas/Todo"
      required:
        - id
        - createdAt
        - updatedAt
        - space
        - spaceId
        - owner
        - ownerId
        - title
        - private
    Todo:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        owner:
          $ref: "#/components/schemas/User"
        ownerId:
          type: string
        list:
          $ref: "#/components/schemas/List"
        listId:
          type: string
        title:
          type: string
        completedAt:
          type: string
          format: date-time
      required:
        - id
        - createdAt
        - updatedAt
        - owner
        - ownerId
        - list
        - listId
        - title
    Collection:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ownerId:
          type: string
        tcgApiFilter:
          type: string
        collecting_variations:
          type: boolean
        cardSort:
          type: string
        cardApiOrderBy:
          type: string
        collectionCards:
          type: array
          items:
            $ref: "#/components/schemas/CollectionCard"
        owner:
          $ref: "#/components/schemas/User"
      required:
        - id
        - name
        - ownerId
        - tcgApiFilter
        - collecting_variations
        - cardSort
        - cardApiOrderBy
        - owner
    CollectionCard:
      type: object
      properties:
        id:
          type: string
        collectionId:
          type: string
        tcgApiCardId:
          type: string
        index:
          type: integer
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
        collection:
          $ref: "#/components/schemas/Collection"
        tcgApiCard:
          $ref: "#/components/schemas/TcgApiCard"
      required:
        - id
        - collectionId
        - tcgApiCardId
        - index
        - owned
        - ownedVariation
        - awaitingOwnership
        - awaitingOwnershipVariation
        - collection
        - tcgApiCard
    TcgApiSet:
      type: object
      properties:
        id:
          type: string
        tcgSetId:
          type: string
        name:
          type: string
        series:
          type: string
        printedTotal:
          type: integer
        total:
          type: integer
        legalities:
          type: string
        ptcgoCode:
          type: string
        releaseDate:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        images: {}
        requiresCardUpdate:
          type: boolean
        tcgApiCards:
          type: array
          items:
            $ref: "#/components/schemas/TcgApiCard"
      required:
        - id
        - tcgSetId
        - name
        - series
        - printedTotal
        - total
        - releaseDate
        - updatedAt
        - requiresCardUpdate
    TcgApiCard:
      type: object
      properties:
        id:
          type: string
        cardTcgId:
          type: string
        setTcgId:
          type: string
        name:
          type: string
        supertype: {}
        subtypes:
          type: array
          items: {}
        hp:
          type: string
        types:
          type: array
          items: {}
        evolvesFrom:
          type: string
        evolvesTo:
          type: array
          items: {}
        rules:
          type: array
          items: {}
        ancientTrait: {}
        abilities:
          type: array
          items: {}
        attacks:
          type: array
          items: {}
        weaknesses:
          type: array
          items: {}
        resistances:
          type: array
          items: {}
        retreatCost:
          type: array
          items:
            type: string
        convertedRetreatCost:
          type: integer
        number:
          type: string
        artist:
          type: string
        rarity:
          type: string
        flavorText:
          type: string
        nationalPokedexNumbers:
          type: array
          items:
            type: integer
        legalities: {}
        images: {}
        setLib: {}
        setId:
          type: string
        set:
          $ref: "#/components/schemas/TcgApiSet"
        collectionCard:
          type: array
          items:
            $ref: "#/components/schemas/CollectionCard"
      required:
        - id
        - cardTcgId
        - setTcgId
        - name
        - supertype
        - subtypes
        - hp
        - types
        - evolvesFrom
        - evolvesTo
        - rules
        - ancientTrait
        - abilities
        - attacks
        - weaknesses
        - resistances
        - retreatCost
        - convertedRetreatCost
        - number
        - artist
        - rarity
        - flavorText
        - nationalPokedexNumbers
        - images
        - setId
        - set
    AccountWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    AccountOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        type:
          $ref: "#/components/schemas/SortOrder"
        provider:
          $ref: "#/components/schemas/SortOrder"
        providerAccountId:
          $ref: "#/components/schemas/SortOrder"
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        access_token:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        token_type:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        scope:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        id_token:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        session_state:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    AccountWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        provider_providerAccountId:
          $ref: "#/components/schemas/AccountProviderProviderAccountIdCompoundUniqueInput"
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    AccountScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableWithAggregatesFilter"
            - type: integer
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
    SessionWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        sessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    SessionOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        sessionToken:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        expires:
          $ref: "#/components/schemas/SortOrder"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    SessionWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    SessionScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        sessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    UserWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        email:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        password:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        accounts:
          $ref: "#/components/schemas/AccountListRelationFilter"
        sessions:
          $ref: "#/components/schemas/SessionListRelationFilter"
        spaces:
          $ref: "#/components/schemas/SpaceUserListRelationFilter"
        todos:
          $ref: "#/components/schemas/TodoListRelationFilter"
        lists:
          $ref: "#/components/schemas/ListListRelationFilter"
        collection:
          $ref: "#/components/schemas/CollectionListRelationFilter"
    UserOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        email:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        password:
          $ref: "#/components/schemas/SortOrder"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        image:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        accounts:
          $ref: "#/components/schemas/AccountOrderByRelationAggregateInput"
        sessions:
          $ref: "#/components/schemas/SessionOrderByRelationAggregateInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserOrderByRelationAggregateInput"
        todos:
          $ref: "#/components/schemas/TodoOrderByRelationAggregateInput"
        lists:
          $ref: "#/components/schemas/ListOrderByRelationAggregateInput"
        collection:
          $ref: "#/components/schemas/CollectionOrderByRelationAggregateInput"
    UserWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        password:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        accounts:
          $ref: "#/components/schemas/AccountListRelationFilter"
        sessions:
          $ref: "#/components/schemas/SessionListRelationFilter"
        spaces:
          $ref: "#/components/schemas/SpaceUserListRelationFilter"
        todos:
          $ref: "#/components/schemas/TodoListRelationFilter"
        lists:
          $ref: "#/components/schemas/ListListRelationFilter"
        collection:
          $ref: "#/components/schemas/CollectionListRelationFilter"
    UserScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        email:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        password:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
    VerificationTokenWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/VerificationTokenWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        identifier:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        token:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    VerificationTokenOrderByWithRelationInput:
      type: object
      properties:
        identifier:
          $ref: "#/components/schemas/SortOrder"
        token:
          $ref: "#/components/schemas/SortOrder"
        expires:
          $ref: "#/components/schemas/SortOrder"
    VerificationTokenWhereUniqueInput:
      type: object
      properties:
        token:
          type: string
        identifier_token:
          $ref: "#/components/schemas/VerificationTokenIdentifierTokenCompoundUniqueInput"
        AND:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/VerificationTokenWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        identifier:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    VerificationTokenScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        identifier:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        token:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    SpaceWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SpaceWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SpaceWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SpaceWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        slug:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        members:
          $ref: "#/components/schemas/SpaceUserListRelationFilter"
        lists:
          $ref: "#/components/schemas/ListListRelationFilter"
    SpaceOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        slug:
          $ref: "#/components/schemas/SortOrder"
        members:
          $ref: "#/components/schemas/SpaceUserOrderByRelationAggregateInput"
        lists:
          $ref: "#/components/schemas/ListOrderByRelationAggregateInput"
    SpaceWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        slug:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/SpaceWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SpaceWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SpaceWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        members:
          $ref: "#/components/schemas/SpaceUserListRelationFilter"
        lists:
          $ref: "#/components/schemas/ListListRelationFilter"
    SpaceScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SpaceScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SpaceScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SpaceScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        slug:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    SpaceUserWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        spaceId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumSpaceUserRoleFilter"
            - $ref: "#/components/schemas/SpaceUserRole"
        space:
          oneOf:
            - $ref: "#/components/schemas/SpaceRelationFilter"
            - $ref: "#/components/schemas/SpaceWhereInput"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    SpaceUserOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        spaceId:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        role:
          $ref: "#/components/schemas/SortOrder"
        space:
          $ref: "#/components/schemas/SpaceOrderByWithRelationInput"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    SpaceUserWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        userId_spaceId:
          $ref: "#/components/schemas/SpaceUserUserIdSpaceIdCompoundUniqueInput"
        AND:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        spaceId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumSpaceUserRoleFilter"
            - $ref: "#/components/schemas/SpaceUserRole"
        space:
          oneOf:
            - $ref: "#/components/schemas/SpaceRelationFilter"
            - $ref: "#/components/schemas/SpaceWhereInput"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    SpaceUserScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUserScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        spaceId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumSpaceUserRoleWithAggregatesFilter"
            - $ref: "#/components/schemas/SpaceUserRole"
    ListWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ListWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ListWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ListWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        spaceId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        ownerId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        title:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        private:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        space:
          oneOf:
            - $ref: "#/components/schemas/SpaceRelationFilter"
            - $ref: "#/components/schemas/SpaceWhereInput"
        owner:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        todos:
          $ref: "#/components/schemas/TodoListRelationFilter"
    ListOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        spaceId:
          $ref: "#/components/schemas/SortOrder"
        ownerId:
          $ref: "#/components/schemas/SortOrder"
        title:
          $ref: "#/components/schemas/SortOrder"
        private:
          $ref: "#/components/schemas/SortOrder"
        space:
          $ref: "#/components/schemas/SpaceOrderByWithRelationInput"
        owner:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        todos:
          $ref: "#/components/schemas/TodoOrderByRelationAggregateInput"
    ListWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/ListWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ListWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ListWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        spaceId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        ownerId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        title:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        private:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        space:
          oneOf:
            - $ref: "#/components/schemas/SpaceRelationFilter"
            - $ref: "#/components/schemas/SpaceWhereInput"
        owner:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        todos:
          $ref: "#/components/schemas/TodoListRelationFilter"
    ListScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ListScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ListScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ListScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        spaceId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        ownerId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        title:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        private:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
    TodoWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TodoWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        ownerId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        listId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        title:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        completedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        owner:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        list:
          oneOf:
            - $ref: "#/components/schemas/ListRelationFilter"
            - $ref: "#/components/schemas/ListWhereInput"
    TodoOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        ownerId:
          $ref: "#/components/schemas/SortOrder"
        listId:
          $ref: "#/components/schemas/SortOrder"
        title:
          $ref: "#/components/schemas/SortOrder"
        completedAt:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        owner:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        list:
          $ref: "#/components/schemas/ListOrderByWithRelationInput"
    TodoWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TodoWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        ownerId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        listId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        title:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        completedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
        owner:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        list:
          oneOf:
            - $ref: "#/components/schemas/ListRelationFilter"
            - $ref: "#/components/schemas/ListWhereInput"
    TodoScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TodoScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TodoScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TodoScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        ownerId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        listId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        title:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        completedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
    CollectionWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/CollectionWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        ownerId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        tcgApiFilter:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        collecting_variations:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        cardSort:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        cardApiOrderBy:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        collectionCards:
          $ref: "#/components/schemas/CollectionCardListRelationFilter"
        owner:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    CollectionOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        ownerId:
          $ref: "#/components/schemas/SortOrder"
        tcgApiFilter:
          $ref: "#/components/schemas/SortOrder"
        collecting_variations:
          $ref: "#/components/schemas/SortOrder"
        cardSort:
          $ref: "#/components/schemas/SortOrder"
        cardApiOrderBy:
          $ref: "#/components/schemas/SortOrder"
        collectionCards:
          $ref: "#/components/schemas/CollectionCardOrderByRelationAggregateInput"
        owner:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    CollectionWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/CollectionWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        ownerId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        tcgApiFilter:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        collecting_variations:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        cardSort:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        cardApiOrderBy:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        collectionCards:
          $ref: "#/components/schemas/CollectionCardListRelationFilter"
        owner:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    CollectionScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/CollectionScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/CollectionScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/CollectionScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        ownerId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        tcgApiFilter:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        collecting_variations:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
        cardSort:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        cardApiOrderBy:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    CollectionCardWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/CollectionCardWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        collectionId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        tcgApiCardId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        index:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        owned:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        ownedVariation:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        awaitingOwnership:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        awaitingOwnershipVariation:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        collection:
          oneOf:
            - $ref: "#/components/schemas/CollectionRelationFilter"
            - $ref: "#/components/schemas/CollectionWhereInput"
        tcgApiCard:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardRelationFilter"
            - $ref: "#/components/schemas/TcgApiCardWhereInput"
    CollectionCardOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        collectionId:
          $ref: "#/components/schemas/SortOrder"
        tcgApiCardId:
          $ref: "#/components/schemas/SortOrder"
        index:
          $ref: "#/components/schemas/SortOrder"
        owned:
          $ref: "#/components/schemas/SortOrder"
        ownedVariation:
          $ref: "#/components/schemas/SortOrder"
        awaitingOwnership:
          $ref: "#/components/schemas/SortOrder"
        awaitingOwnershipVariation:
          $ref: "#/components/schemas/SortOrder"
        collection:
          $ref: "#/components/schemas/CollectionOrderByWithRelationInput"
        tcgApiCard:
          $ref: "#/components/schemas/TcgApiCardOrderByWithRelationInput"
    CollectionCardWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/CollectionCardWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereInput"
        collectionId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        tcgApiCardId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        index:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        owned:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        ownedVariation:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        awaitingOwnership:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        awaitingOwnershipVariation:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        collection:
          oneOf:
            - $ref: "#/components/schemas/CollectionRelationFilter"
            - $ref: "#/components/schemas/CollectionWhereInput"
        tcgApiCard:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardRelationFilter"
            - $ref: "#/components/schemas/TcgApiCardWhereInput"
    CollectionCardScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/CollectionCardScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        collectionId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        tcgApiCardId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        index:
          oneOf:
            - $ref: "#/components/schemas/IntWithAggregatesFilter"
            - type: integer
        owned:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
        ownedVariation:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
        awaitingOwnership:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
        awaitingOwnershipVariation:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
    TcgApiSetWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiSetWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TcgApiSetWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiSetWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        tcgSetId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        series:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        printedTotal:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        total:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        ptcgoCode:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        releaseDate:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        images:
          $ref: "#/components/schemas/JsonNullableFilter"
        requiresCardUpdate:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        tcgApiCards:
          $ref: "#/components/schemas/TcgApiCardListRelationFilter"
    TcgApiSetOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        tcgSetId:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        series:
          $ref: "#/components/schemas/SortOrder"
        printedTotal:
          $ref: "#/components/schemas/SortOrder"
        total:
          $ref: "#/components/schemas/SortOrder"
        legalities:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        ptcgoCode:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        releaseDate:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        images:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        requiresCardUpdate:
          $ref: "#/components/schemas/SortOrder"
        tcgApiCards:
          $ref: "#/components/schemas/TcgApiCardOrderByRelationAggregateInput"
    TcgApiSetWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        tcgSetId:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiSetWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TcgApiSetWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiSetWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        series:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        printedTotal:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        total:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        ptcgoCode:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        releaseDate:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        images:
          $ref: "#/components/schemas/JsonNullableFilter"
        requiresCardUpdate:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        tcgApiCards:
          $ref: "#/components/schemas/TcgApiCardListRelationFilter"
    TcgApiSetScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiSetScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TcgApiSetScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiSetScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        tcgSetId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        series:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        printedTotal:
          oneOf:
            - $ref: "#/components/schemas/IntWithAggregatesFilter"
            - type: integer
        total:
          oneOf:
            - $ref: "#/components/schemas/IntWithAggregatesFilter"
            - type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        ptcgoCode:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
        releaseDate:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        images:
          $ref: "#/components/schemas/JsonNullableWithAggregatesFilter"
        requiresCardUpdate:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
    TcgApiCardWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TcgApiCardWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        cardTcgId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        setTcgId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        supertype:
          $ref: "#/components/schemas/JsonFilter"
        subtypes:
          $ref: "#/components/schemas/JsonNullableListFilter"
        hp:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        types:
          $ref: "#/components/schemas/JsonNullableListFilter"
        evolvesFrom:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        evolvesTo:
          $ref: "#/components/schemas/JsonNullableListFilter"
        rules:
          $ref: "#/components/schemas/JsonNullableListFilter"
        ancientTrait:
          $ref: "#/components/schemas/JsonFilter"
        abilities:
          $ref: "#/components/schemas/JsonNullableListFilter"
        attacks:
          $ref: "#/components/schemas/JsonNullableListFilter"
        weaknesses:
          $ref: "#/components/schemas/JsonNullableListFilter"
        resistances:
          $ref: "#/components/schemas/JsonNullableListFilter"
        retreatCost:
          $ref: "#/components/schemas/StringNullableListFilter"
        convertedRetreatCost:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        number:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        artist:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        rarity:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        flavorText:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        nationalPokedexNumbers:
          $ref: "#/components/schemas/IntNullableListFilter"
        legalities:
          $ref: "#/components/schemas/JsonNullableFilter"
        images:
          $ref: "#/components/schemas/JsonFilter"
        setLib:
          $ref: "#/components/schemas/JsonNullableFilter"
        setId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        set:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetRelationFilter"
            - $ref: "#/components/schemas/TcgApiSetWhereInput"
        collectionCard:
          $ref: "#/components/schemas/CollectionCardListRelationFilter"
    TcgApiCardOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        cardTcgId:
          $ref: "#/components/schemas/SortOrder"
        setTcgId:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        supertype:
          $ref: "#/components/schemas/SortOrder"
        subtypes:
          $ref: "#/components/schemas/SortOrder"
        hp:
          $ref: "#/components/schemas/SortOrder"
        types:
          $ref: "#/components/schemas/SortOrder"
        evolvesFrom:
          $ref: "#/components/schemas/SortOrder"
        evolvesTo:
          $ref: "#/components/schemas/SortOrder"
        rules:
          $ref: "#/components/schemas/SortOrder"
        ancientTrait:
          $ref: "#/components/schemas/SortOrder"
        abilities:
          $ref: "#/components/schemas/SortOrder"
        attacks:
          $ref: "#/components/schemas/SortOrder"
        weaknesses:
          $ref: "#/components/schemas/SortOrder"
        resistances:
          $ref: "#/components/schemas/SortOrder"
        retreatCost:
          $ref: "#/components/schemas/SortOrder"
        convertedRetreatCost:
          $ref: "#/components/schemas/SortOrder"
        number:
          $ref: "#/components/schemas/SortOrder"
        artist:
          $ref: "#/components/schemas/SortOrder"
        rarity:
          $ref: "#/components/schemas/SortOrder"
        flavorText:
          $ref: "#/components/schemas/SortOrder"
        nationalPokedexNumbers:
          $ref: "#/components/schemas/SortOrder"
        legalities:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        images:
          $ref: "#/components/schemas/SortOrder"
        setLib:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        setId:
          $ref: "#/components/schemas/SortOrder"
        set:
          $ref: "#/components/schemas/TcgApiSetOrderByWithRelationInput"
        collectionCard:
          $ref: "#/components/schemas/CollectionCardOrderByRelationAggregateInput"
    TcgApiCardWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        cardTcgId:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TcgApiCardWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardWhereInput"
        setTcgId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        supertype:
          $ref: "#/components/schemas/JsonFilter"
        subtypes:
          $ref: "#/components/schemas/JsonNullableListFilter"
        hp:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        types:
          $ref: "#/components/schemas/JsonNullableListFilter"
        evolvesFrom:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        evolvesTo:
          $ref: "#/components/schemas/JsonNullableListFilter"
        rules:
          $ref: "#/components/schemas/JsonNullableListFilter"
        ancientTrait:
          $ref: "#/components/schemas/JsonFilter"
        abilities:
          $ref: "#/components/schemas/JsonNullableListFilter"
        attacks:
          $ref: "#/components/schemas/JsonNullableListFilter"
        weaknesses:
          $ref: "#/components/schemas/JsonNullableListFilter"
        resistances:
          $ref: "#/components/schemas/JsonNullableListFilter"
        retreatCost:
          $ref: "#/components/schemas/StringNullableListFilter"
        convertedRetreatCost:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        number:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        artist:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        rarity:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        flavorText:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        nationalPokedexNumbers:
          $ref: "#/components/schemas/IntNullableListFilter"
        legalities:
          $ref: "#/components/schemas/JsonNullableFilter"
        images:
          $ref: "#/components/schemas/JsonFilter"
        setLib:
          $ref: "#/components/schemas/JsonNullableFilter"
        setId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        set:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetRelationFilter"
            - $ref: "#/components/schemas/TcgApiSetWhereInput"
        collectionCard:
          $ref: "#/components/schemas/CollectionCardListRelationFilter"
    TcgApiCardScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TcgApiCardScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        cardTcgId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        setTcgId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        supertype:
          $ref: "#/components/schemas/JsonWithAggregatesFilter"
        subtypes:
          $ref: "#/components/schemas/JsonNullableListFilter"
        hp:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        types:
          $ref: "#/components/schemas/JsonNullableListFilter"
        evolvesFrom:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        evolvesTo:
          $ref: "#/components/schemas/JsonNullableListFilter"
        rules:
          $ref: "#/components/schemas/JsonNullableListFilter"
        ancientTrait:
          $ref: "#/components/schemas/JsonWithAggregatesFilter"
        abilities:
          $ref: "#/components/schemas/JsonNullableListFilter"
        attacks:
          $ref: "#/components/schemas/JsonNullableListFilter"
        weaknesses:
          $ref: "#/components/schemas/JsonNullableListFilter"
        resistances:
          $ref: "#/components/schemas/JsonNullableListFilter"
        retreatCost:
          $ref: "#/components/schemas/StringNullableListFilter"
        convertedRetreatCost:
          oneOf:
            - $ref: "#/components/schemas/IntWithAggregatesFilter"
            - type: integer
        number:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        artist:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        rarity:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        flavorText:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        nationalPokedexNumbers:
          $ref: "#/components/schemas/IntNullableListFilter"
        legalities:
          $ref: "#/components/schemas/JsonNullableWithAggregatesFilter"
        images:
          $ref: "#/components/schemas/JsonWithAggregatesFilter"
        setLib:
          $ref: "#/components/schemas/JsonNullableWithAggregatesFilter"
        setId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    AccountCreateInput:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutAccountsInput"
      required:
        - type
        - provider
        - providerAccountId
        - user
    AccountUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutAccountsNestedInput"
    AccountCreateManyInput:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
      required:
        - userId
        - type
        - provider
        - providerAccountId
    AccountUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
    SessionCreateInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutSessionsInput"
      required:
        - sessionToken
        - expires
        - user
    SessionUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutSessionsNestedInput"
    SessionCreateManyInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - userId
        - expires
    SessionUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    UserCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserCreateNestedManyWithoutUserInput"
        todos:
          $ref: "#/components/schemas/TodoCreateNestedManyWithoutOwnerInput"
        lists:
          $ref: "#/components/schemas/ListCreateNestedManyWithoutOwnerInput"
        collection:
          $ref: "#/components/schemas/CollectionCreateNestedManyWithoutOwnerInput"
      required:
        - password
    UserUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUpdateManyWithoutUserNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUpdateManyWithoutOwnerNestedInput"
        lists:
          $ref: "#/components/schemas/ListUpdateManyWithoutOwnerNestedInput"
        collection:
          $ref: "#/components/schemas/CollectionUpdateManyWithoutOwnerNestedInput"
    UserCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
      required:
        - password
    UserUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
    VerificationTokenCreateInput:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - identifier
        - token
        - expires
    VerificationTokenUpdateInput:
      type: object
      properties:
        identifier:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    VerificationTokenCreateManyInput:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - identifier
        - token
        - expires
    VerificationTokenUpdateManyMutationInput:
      type: object
      properties:
        identifier:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    SpaceCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        slug:
          type: string
        members:
          $ref: "#/components/schemas/SpaceUserCreateNestedManyWithoutSpaceInput"
        lists:
          $ref: "#/components/schemas/ListCreateNestedManyWithoutSpaceInput"
      required:
        - name
        - slug
    SpaceUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        members:
          $ref: "#/components/schemas/SpaceUserUpdateManyWithoutSpaceNestedInput"
        lists:
          $ref: "#/components/schemas/ListUpdateManyWithoutSpaceNestedInput"
    SpaceCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        slug:
          type: string
      required:
        - name
        - slug
    SpaceUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    SpaceUserCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        role:
          $ref: "#/components/schemas/SpaceUserRole"
        space:
          $ref: "#/components/schemas/SpaceCreateNestedOneWithoutMembersInput"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutSpacesInput"
      required:
        - role
        - space
        - user
    SpaceUserUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserRole"
            - $ref: "#/components/schemas/EnumSpaceUserRoleFieldUpdateOperationsInput"
        space:
          $ref: "#/components/schemas/SpaceUpdateOneRequiredWithoutMembersNestedInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutSpacesNestedInput"
    SpaceUserCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        spaceId:
          type: string
        userId:
          type: string
        role:
          $ref: "#/components/schemas/SpaceUserRole"
      required:
        - spaceId
        - userId
        - role
    SpaceUserUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserRole"
            - $ref: "#/components/schemas/EnumSpaceUserRoleFieldUpdateOperationsInput"
    ListCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        title:
          type: string
        private:
          type: boolean
        space:
          $ref: "#/components/schemas/SpaceCreateNestedOneWithoutListsInput"
        owner:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutListsInput"
        todos:
          $ref: "#/components/schemas/TodoCreateNestedManyWithoutListInput"
      required:
        - title
        - space
        - owner
    ListUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        private:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        space:
          $ref: "#/components/schemas/SpaceUpdateOneRequiredWithoutListsNestedInput"
        owner:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutListsNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUpdateManyWithoutListNestedInput"
    ListCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        spaceId:
          type: string
        ownerId:
          type: string
        title:
          type: string
        private:
          type: boolean
      required:
        - spaceId
        - ownerId
        - title
    ListUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        private:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    TodoCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        title:
          type: string
        completedAt:
          type: string
          format: date-time
        owner:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTodosInput"
        list:
          $ref: "#/components/schemas/ListCreateNestedOneWithoutTodosInput"
      required:
        - title
        - owner
        - list
    TodoUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        owner:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutTodosNestedInput"
        list:
          $ref: "#/components/schemas/ListUpdateOneRequiredWithoutTodosNestedInput"
    TodoCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        ownerId:
          type: string
        listId:
          type: string
        title:
          type: string
        completedAt:
          type: string
          format: date-time
      required:
        - ownerId
        - listId
        - title
    TodoUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
    CollectionCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        tcgApiFilter:
          type: string
        collecting_variations:
          type: boolean
        cardSort:
          type: string
        cardApiOrderBy:
          type: string
        collectionCards:
          $ref: "#/components/schemas/CollectionCardCreateNestedManyWithoutCollectionInpu\
            t"
        owner:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutCollectionInput"
      required:
        - name
        - tcgApiFilter
        - collecting_variations
        - cardSort
        - cardApiOrderBy
        - owner
    CollectionUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tcgApiFilter:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        collecting_variations:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        cardSort:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardApiOrderBy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        collectionCards:
          $ref: "#/components/schemas/CollectionCardUpdateManyWithoutCollectionNestedInpu\
            t"
        owner:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutCollectionNestedInput"
    CollectionCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ownerId:
          type: string
        tcgApiFilter:
          type: string
        collecting_variations:
          type: boolean
        cardSort:
          type: string
        cardApiOrderBy:
          type: string
      required:
        - name
        - ownerId
        - tcgApiFilter
        - collecting_variations
        - cardSort
        - cardApiOrderBy
    CollectionUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tcgApiFilter:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        collecting_variations:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        cardSort:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardApiOrderBy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    CollectionCardCreateInput:
      type: object
      properties:
        id:
          type: string
        index:
          type: integer
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
        collection:
          $ref: "#/components/schemas/CollectionCreateNestedOneWithoutCollectionCardsInpu\
            t"
        tcgApiCard:
          $ref: "#/components/schemas/TcgApiCardCreateNestedOneWithoutCollectionCardInput"
      required:
        - index
        - owned
        - ownedVariation
        - awaitingOwnership
        - awaitingOwnershipVariation
        - collection
        - tcgApiCard
    CollectionCardUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        index:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        owned:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        ownedVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnership:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnershipVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        collection:
          $ref: "#/components/schemas/CollectionUpdateOneRequiredWithoutCollectionCardsNe\
            stedInput"
        tcgApiCard:
          $ref: "#/components/schemas/TcgApiCardUpdateOneRequiredWithoutCollectionCardNes\
            tedInput"
    CollectionCardCreateManyInput:
      type: object
      properties:
        id:
          type: string
        collectionId:
          type: string
        tcgApiCardId:
          type: string
        index:
          type: integer
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
      required:
        - collectionId
        - tcgApiCardId
        - index
        - owned
        - ownedVariation
        - awaitingOwnership
        - awaitingOwnershipVariation
    CollectionCardUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        index:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        owned:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        ownedVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnership:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnershipVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    TcgApiSetCreateInput:
      type: object
      properties:
        id:
          type: string
        tcgSetId:
          type: string
        name:
          type: string
        series:
          type: string
        printedTotal:
          type: integer
        total:
          type: integer
        legalities:
          type: string
        ptcgoCode:
          type: string
        releaseDate:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        images:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        requiresCardUpdate:
          type: boolean
        tcgApiCards:
          $ref: "#/components/schemas/TcgApiCardCreateNestedManyWithoutSetInput"
      required:
        - tcgSetId
        - name
        - series
        - printedTotal
        - total
        - releaseDate
        - updatedAt
    TcgApiSetUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tcgSetId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        series:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        printedTotal:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        total:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        legalities:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        ptcgoCode:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        releaseDate:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        images:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        requiresCardUpdate:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        tcgApiCards:
          $ref: "#/components/schemas/TcgApiCardUpdateManyWithoutSetNestedInput"
    TcgApiSetCreateManyInput:
      type: object
      properties:
        id:
          type: string
        tcgSetId:
          type: string
        name:
          type: string
        series:
          type: string
        printedTotal:
          type: integer
        total:
          type: integer
        legalities:
          type: string
        ptcgoCode:
          type: string
        releaseDate:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        images:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        requiresCardUpdate:
          type: boolean
      required:
        - tcgSetId
        - name
        - series
        - printedTotal
        - total
        - releaseDate
        - updatedAt
    TcgApiSetUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tcgSetId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        series:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        printedTotal:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        total:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        legalities:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        ptcgoCode:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        releaseDate:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        images:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        requiresCardUpdate:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    TcgApiCardCreateInput:
      type: object
      properties:
        id:
          type: string
        cardTcgId:
          type: string
        setTcgId:
          type: string
        name:
          type: string
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatesubtypesInput"
            - type: array
              items: {}
        hp:
          type: string
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          type: string
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          type: integer
        number:
          type: string
        artist:
          type: string
        rarity:
          type: string
        flavorText:
          type: string
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        set:
          $ref: "#/components/schemas/TcgApiSetCreateNestedOneWithoutTcgApiCardsInput"
        collectionCard:
          $ref: "#/components/schemas/CollectionCardCreateNestedManyWithoutTcgApiCardInpu\
            t"
      required:
        - cardTcgId
        - setTcgId
        - name
        - supertype
        - hp
        - evolvesFrom
        - ancientTrait
        - convertedRetreatCost
        - number
        - artist
        - rarity
        - flavorText
        - images
        - set
    TcgApiCardUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        setTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatesubtypesInput"
            - type: array
              items: {}
        hp:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        number:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        artist:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rarity:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        flavorText:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        set:
          $ref: "#/components/schemas/TcgApiSetUpdateOneRequiredWithoutTcgApiCardsNestedI\
            nput"
        collectionCard:
          $ref: "#/components/schemas/CollectionCardUpdateManyWithoutTcgApiCardNestedInpu\
            t"
    TcgApiCardCreateManyInput:
      type: object
      properties:
        id:
          type: string
        cardTcgId:
          type: string
        setTcgId:
          type: string
        name:
          type: string
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatesubtypesInput"
            - type: array
              items: {}
        hp:
          type: string
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          type: string
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          type: integer
        number:
          type: string
        artist:
          type: string
        rarity:
          type: string
        flavorText:
          type: string
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        setId:
          type: string
      required:
        - cardTcgId
        - setTcgId
        - name
        - supertype
        - hp
        - evolvesFrom
        - ancientTrait
        - convertedRetreatCost
        - number
        - artist
        - rarity
        - flavorText
        - images
        - setId
    TcgApiCardUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        setTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatesubtypesInput"
            - type: array
              items: {}
        hp:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        number:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        artist:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rarity:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        flavorText:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
    StringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    StringNullableFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
    IntNullableFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
    UserRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/UserWhereInput"
        isNot:
          $ref: "#/components/schemas/UserWhereInput"
    SortOrderInput:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/SortOrder"
        nulls:
          $ref: "#/components/schemas/NullsOrder"
      required:
        - sort
    AccountProviderProviderAccountIdCompoundUniqueInput:
      type: object
      properties:
        provider:
          type: string
        providerAccountId:
          type: string
      required:
        - provider
        - providerAccountId
    StringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    StringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    IntNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatNullableFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedIntNullableFilter"
    DateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    DateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    DateTimeNullableFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    AccountListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/AccountWhereInput"
        some:
          $ref: "#/components/schemas/AccountWhereInput"
        none:
          $ref: "#/components/schemas/AccountWhereInput"
    SessionListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/SessionWhereInput"
        some:
          $ref: "#/components/schemas/SessionWhereInput"
        none:
          $ref: "#/components/schemas/SessionWhereInput"
    SpaceUserListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/SpaceUserWhereInput"
        some:
          $ref: "#/components/schemas/SpaceUserWhereInput"
        none:
          $ref: "#/components/schemas/SpaceUserWhereInput"
    TodoListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/TodoWhereInput"
        some:
          $ref: "#/components/schemas/TodoWhereInput"
        none:
          $ref: "#/components/schemas/TodoWhereInput"
    ListListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/ListWhereInput"
        some:
          $ref: "#/components/schemas/ListWhereInput"
        none:
          $ref: "#/components/schemas/ListWhereInput"
    CollectionListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/CollectionWhereInput"
        some:
          $ref: "#/components/schemas/CollectionWhereInput"
        none:
          $ref: "#/components/schemas/CollectionWhereInput"
    AccountOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    SessionOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    SpaceUserOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    TodoOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    ListOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    CollectionOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    DateTimeNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    VerificationTokenIdentifierTokenCompoundUniqueInput:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
      required:
        - identifier
        - token
    EnumSpaceUserRoleFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/SpaceUserRole"
        in:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUserRole"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUserRole"
        not:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserRole"
            - $ref: "#/components/schemas/NestedEnumSpaceUserRoleFilter"
    SpaceRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/SpaceWhereInput"
        isNot:
          $ref: "#/components/schemas/SpaceWhereInput"
    SpaceUserUserIdSpaceIdCompoundUniqueInput:
      type: object
      properties:
        userId:
          type: string
        spaceId:
          type: string
      required:
        - userId
        - spaceId
    EnumSpaceUserRoleWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/SpaceUserRole"
        in:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUserRole"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUserRole"
        not:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserRole"
            - $ref: "#/components/schemas/NestedEnumSpaceUserRoleWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumSpaceUserRoleFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumSpaceUserRoleFilter"
    BoolFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolFilter"
    BoolWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolFilter"
    ListRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/ListWhereInput"
        isNot:
          $ref: "#/components/schemas/ListWhereInput"
    CollectionCardListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/CollectionCardWhereInput"
        some:
          $ref: "#/components/schemas/CollectionCardWhereInput"
        none:
          $ref: "#/components/schemas/CollectionCardWhereInput"
    CollectionCardOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    IntFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntFilter"
    CollectionRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/CollectionWhereInput"
        isNot:
          $ref: "#/components/schemas/CollectionWhereInput"
    TcgApiCardRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
        isNot:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
    IntWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedIntFilter"
        _max:
          $ref: "#/components/schemas/NestedIntFilter"
    JsonNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        path:
          type: array
          items:
            type: string
        string_contains:
          type: string
        string_starts_with:
          type: string
        string_ends_with:
          type: string
        array_contains: {}
        array_starts_with: {}
        array_ends_with: {}
        lt: {}
        lte: {}
        gt: {}
        gte: {}
        not:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
    TcgApiCardListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
        some:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
        none:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
    TcgApiCardOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    JsonNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        path:
          type: array
          items:
            type: string
        string_contains:
          type: string
        string_starts_with:
          type: string
        string_ends_with:
          type: string
        array_contains: {}
        array_starts_with: {}
        array_ends_with: {}
        lt: {}
        lte: {}
        gt: {}
        gte: {}
        not:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedJsonNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedJsonNullableFilter"
    JsonFilter:
      type: object
      properties:
        equals:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        path:
          type: array
          items:
            type: string
        string_contains:
          type: string
        string_starts_with:
          type: string
        string_ends_with:
          type: string
        array_contains: {}
        array_starts_with: {}
        array_ends_with: {}
        lt: {}
        lte: {}
        gt: {}
        gte: {}
        not:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
    JsonNullableListFilter:
      type: object
      properties:
        equals:
          type: array
          items: {}
        has: {}
        hasEvery:
          type: array
          items: {}
        hasSome:
          type: array
          items: {}
        isEmpty:
          type: boolean
    StringNullableListFilter:
      type: object
      properties:
        equals:
          type: array
          items:
            type: string
        has:
          type: string
        hasEvery:
          type: array
          items:
            type: string
        hasSome:
          type: array
          items:
            type: string
        isEmpty:
          type: boolean
    IntNullableListFilter:
      type: object
      properties:
        equals:
          type: array
          items:
            type: integer
        has:
          type: integer
        hasEvery:
          type: array
          items:
            type: integer
        hasSome:
          type: array
          items:
            type: integer
        isEmpty:
          type: boolean
    TcgApiSetRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/TcgApiSetWhereInput"
        isNot:
          $ref: "#/components/schemas/TcgApiSetWhereInput"
    JsonWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        path:
          type: array
          items:
            type: string
        string_contains:
          type: string
        string_starts_with:
          type: string
        string_ends_with:
          type: string
        array_contains: {}
        array_starts_with: {}
        array_ends_with: {}
        lt: {}
        lte: {}
        gt: {}
        gte: {}
        not:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedJsonFilter"
        _max:
          $ref: "#/components/schemas/NestedJsonFilter"
    UserCreateNestedOneWithoutAccountsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutAccountsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    StringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
    NullableStringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
    NullableIntFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: integer
        increment:
          type: integer
        decrement:
          type: integer
        multiply:
          type: integer
        divide:
          type: integer
    UserUpdateOneRequiredWithoutAccountsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutAccountsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutAccountsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
    UserCreateNestedOneWithoutSessionsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSessionsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    DateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
          format: date-time
    UserUpdateOneRequiredWithoutSessionsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSessionsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutSessionsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
    AccountCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
    SessionCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
    SpaceUserCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateWithoutUserInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SpaceUserCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
    TodoCreateNestedManyWithoutOwnerInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
        createMany:
          $ref: "#/components/schemas/TodoCreateManyOwnerInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
    ListCreateNestedManyWithoutOwnerInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
        createMany:
          $ref: "#/components/schemas/ListCreateManyOwnerInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
    CollectionCreateNestedManyWithoutOwnerInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/CollectionUncheckedCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionUncheckedCreateWithoutOwnerInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateOrConnectWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCreateOrConnectWithoutOwnerInput"
        createMany:
          $ref: "#/components/schemas/CollectionCreateManyOwnerInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereUniqueInput"
    AccountUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
    SessionUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
    SpaceUserUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateWithoutUserInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SpaceUserCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
    TodoUncheckedCreateNestedManyWithoutOwnerInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
        createMany:
          $ref: "#/components/schemas/TodoCreateManyOwnerInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
    ListUncheckedCreateNestedManyWithoutOwnerInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
        createMany:
          $ref: "#/components/schemas/ListCreateManyOwnerInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
    CollectionUncheckedCreateNestedManyWithoutOwnerInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/CollectionUncheckedCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionUncheckedCreateWithoutOwnerInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateOrConnectWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCreateOrConnectWithoutOwnerInput"
        createMany:
          $ref: "#/components/schemas/CollectionCreateManyOwnerInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereUniqueInput"
    NullableDateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
          format: date-time
    AccountUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
    SessionUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
    SpaceUserUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateWithoutUserInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SpaceUserCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserScalarWhereInput"
    TodoUpdateManyWithoutOwnerNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TodoUpsertWithWhereUniqueWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUpsertWithWhereUniqueWithoutOwnerInput"
        createMany:
          $ref: "#/components/schemas/TodoCreateManyOwnerInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateWithWhereUniqueWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUpdateWithWhereUniqueWithoutOwnerInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateManyWithWhereWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUpdateManyWithWhereWithoutOwnerInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TodoScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoScalarWhereInput"
    ListUpdateManyWithoutOwnerNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ListUpsertWithWhereUniqueWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUpsertWithWhereUniqueWithoutOwnerInput"
        createMany:
          $ref: "#/components/schemas/ListCreateManyOwnerInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateWithWhereUniqueWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUpdateWithWhereUniqueWithoutOwnerInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateManyWithWhereWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUpdateManyWithWhereWithoutOwnerInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ListScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListScalarWhereInput"
    CollectionUpdateManyWithoutOwnerNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/CollectionUncheckedCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionUncheckedCreateWithoutOwnerInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateOrConnectWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCreateOrConnectWithoutOwnerInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/CollectionUpsertWithWhereUniqueWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionUpsertWithWhereUniqueWithoutOwnerInput"
        createMany:
          $ref: "#/components/schemas/CollectionCreateManyOwnerInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/CollectionUpdateWithWhereUniqueWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionUpdateWithWhereUniqueWithoutOwnerInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/CollectionUpdateManyWithWhereWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionUpdateManyWithWhereWithoutOwnerInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/CollectionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionScalarWhereInput"
    AccountUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
    SessionUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
    SpaceUserUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateWithoutUserInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SpaceUserCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserScalarWhereInput"
    TodoUncheckedUpdateManyWithoutOwnerNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateOrConnectWithoutOwnerInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TodoUpsertWithWhereUniqueWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUpsertWithWhereUniqueWithoutOwnerInput"
        createMany:
          $ref: "#/components/schemas/TodoCreateManyOwnerInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateWithWhereUniqueWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUpdateWithWhereUniqueWithoutOwnerInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateManyWithWhereWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUpdateManyWithWhereWithoutOwnerInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TodoScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoScalarWhereInput"
    ListUncheckedUpdateManyWithoutOwnerNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateOrConnectWithoutOwnerInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ListUpsertWithWhereUniqueWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUpsertWithWhereUniqueWithoutOwnerInput"
        createMany:
          $ref: "#/components/schemas/ListCreateManyOwnerInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateWithWhereUniqueWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUpdateWithWhereUniqueWithoutOwnerInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateManyWithWhereWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUpdateManyWithWhereWithoutOwnerInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ListScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListScalarWhereInput"
    CollectionUncheckedUpdateManyWithoutOwnerNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/CollectionUncheckedCreateWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionUncheckedCreateWithoutOwnerInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateOrConnectWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCreateOrConnectWithoutOwnerInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/CollectionUpsertWithWhereUniqueWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionUpsertWithWhereUniqueWithoutOwnerInput"
        createMany:
          $ref: "#/components/schemas/CollectionCreateManyOwnerInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CollectionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/CollectionUpdateWithWhereUniqueWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionUpdateWithWhereUniqueWithoutOwnerInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/CollectionUpdateManyWithWhereWithoutOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionUpdateManyWithWhereWithoutOwnerInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/CollectionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionScalarWhereInput"
    SpaceUserCreateNestedManyWithoutSpaceInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
        createMany:
          $ref: "#/components/schemas/SpaceUserCreateManySpaceInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
    ListCreateNestedManyWithoutSpaceInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateWithoutSpaceInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
        createMany:
          $ref: "#/components/schemas/ListCreateManySpaceInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
    SpaceUserUncheckedCreateNestedManyWithoutSpaceInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
        createMany:
          $ref: "#/components/schemas/SpaceUserCreateManySpaceInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
    ListUncheckedCreateNestedManyWithoutSpaceInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateWithoutSpaceInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
        createMany:
          $ref: "#/components/schemas/ListCreateManySpaceInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
    SpaceUserUpdateManyWithoutSpaceNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutSpaceInput"
        createMany:
          $ref: "#/components/schemas/SpaceUserCreateManySpaceInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutSpaceInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutSpaceInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserScalarWhereInput"
    ListUpdateManyWithoutSpaceNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateWithoutSpaceInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ListUpsertWithWhereUniqueWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUpsertWithWhereUniqueWithoutSpaceInput"
        createMany:
          $ref: "#/components/schemas/ListCreateManySpaceInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateWithWhereUniqueWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUpdateWithWhereUniqueWithoutSpaceInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateManyWithWhereWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUpdateManyWithWhereWithoutSpaceInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ListScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListScalarWhereInput"
    SpaceUserUncheckedUpdateManyWithoutSpaceNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateOrConnectWithoutSpaceInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUpsertWithWhereUniqueWithoutSpaceInput"
        createMany:
          $ref: "#/components/schemas/SpaceUserCreateManySpaceInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUpdateWithWhereUniqueWithoutSpaceInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserUpdateManyWithWhereWithoutSpaceInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserScalarWhereInput"
    ListUncheckedUpdateManyWithoutSpaceNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateWithoutSpaceInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateOrConnectWithoutSpaceInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ListUpsertWithWhereUniqueWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUpsertWithWhereUniqueWithoutSpaceInput"
        createMany:
          $ref: "#/components/schemas/ListCreateManySpaceInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ListWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateWithWhereUniqueWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUpdateWithWhereUniqueWithoutSpaceInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateManyWithWhereWithoutSpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListUpdateManyWithWhereWithoutSpaceInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ListScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListScalarWhereInput"
    SpaceCreateNestedOneWithoutMembersInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceCreateWithoutMembersInput"
            - $ref: "#/components/schemas/SpaceUncheckedCreateWithoutMembersInput"
        connectOrCreate:
          $ref: "#/components/schemas/SpaceCreateOrConnectWithoutMembersInput"
        connect:
          $ref: "#/components/schemas/SpaceWhereUniqueInput"
    UserCreateNestedOneWithoutSpacesInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSpacesInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSpacesInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSpacesInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    EnumSpaceUserRoleFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          $ref: "#/components/schemas/SpaceUserRole"
    SpaceUpdateOneRequiredWithoutMembersNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceCreateWithoutMembersInput"
            - $ref: "#/components/schemas/SpaceUncheckedCreateWithoutMembersInput"
        connectOrCreate:
          $ref: "#/components/schemas/SpaceCreateOrConnectWithoutMembersInput"
        upsert:
          $ref: "#/components/schemas/SpaceUpsertWithoutMembersInput"
        connect:
          $ref: "#/components/schemas/SpaceWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SpaceUpdateToOneWithWhereWithoutMembersInput"
            - $ref: "#/components/schemas/SpaceUpdateWithoutMembersInput"
            - $ref: "#/components/schemas/SpaceUncheckedUpdateWithoutMembersInput"
    UserUpdateOneRequiredWithoutSpacesNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSpacesInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSpacesInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSpacesInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutSpacesInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutSpacesInput"
            - $ref: "#/components/schemas/UserUpdateWithoutSpacesInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSpacesInput"
    SpaceCreateNestedOneWithoutListsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceCreateWithoutListsInput"
            - $ref: "#/components/schemas/SpaceUncheckedCreateWithoutListsInput"
        connectOrCreate:
          $ref: "#/components/schemas/SpaceCreateOrConnectWithoutListsInput"
        connect:
          $ref: "#/components/schemas/SpaceWhereUniqueInput"
    UserCreateNestedOneWithoutListsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutListsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutListsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutListsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    TodoCreateNestedManyWithoutListInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateWithoutListInput"
            - $ref: "#/components/schemas/TodoUncheckedCreateWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUncheckedCreateWithoutListInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateOrConnectWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateOrConnectWithoutListInput"
        createMany:
          $ref: "#/components/schemas/TodoCreateManyListInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
    TodoUncheckedCreateNestedManyWithoutListInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateWithoutListInput"
            - $ref: "#/components/schemas/TodoUncheckedCreateWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUncheckedCreateWithoutListInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateOrConnectWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateOrConnectWithoutListInput"
        createMany:
          $ref: "#/components/schemas/TodoCreateManyListInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
    BoolFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: boolean
    SpaceUpdateOneRequiredWithoutListsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceCreateWithoutListsInput"
            - $ref: "#/components/schemas/SpaceUncheckedCreateWithoutListsInput"
        connectOrCreate:
          $ref: "#/components/schemas/SpaceCreateOrConnectWithoutListsInput"
        upsert:
          $ref: "#/components/schemas/SpaceUpsertWithoutListsInput"
        connect:
          $ref: "#/components/schemas/SpaceWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SpaceUpdateToOneWithWhereWithoutListsInput"
            - $ref: "#/components/schemas/SpaceUpdateWithoutListsInput"
            - $ref: "#/components/schemas/SpaceUncheckedUpdateWithoutListsInput"
    UserUpdateOneRequiredWithoutListsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutListsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutListsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutListsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutListsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutListsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutListsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutListsInput"
    TodoUpdateManyWithoutListNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateWithoutListInput"
            - $ref: "#/components/schemas/TodoUncheckedCreateWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUncheckedCreateWithoutListInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateOrConnectWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateOrConnectWithoutListInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TodoUpsertWithWhereUniqueWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUpsertWithWhereUniqueWithoutListInput"
        createMany:
          $ref: "#/components/schemas/TodoCreateManyListInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateWithWhereUniqueWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUpdateWithWhereUniqueWithoutListInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateManyWithWhereWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUpdateManyWithWhereWithoutListInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TodoScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoScalarWhereInput"
    TodoUncheckedUpdateManyWithoutListNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateWithoutListInput"
            - $ref: "#/components/schemas/TodoUncheckedCreateWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUncheckedCreateWithoutListInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateOrConnectWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateOrConnectWithoutListInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TodoUpsertWithWhereUniqueWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUpsertWithWhereUniqueWithoutListInput"
        createMany:
          $ref: "#/components/schemas/TodoCreateManyListInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TodoWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateWithWhereUniqueWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUpdateWithWhereUniqueWithoutListInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateManyWithWhereWithoutListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoUpdateManyWithWhereWithoutListInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TodoScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoScalarWhereInput"
    UserCreateNestedOneWithoutTodosInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTodosInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    ListCreateNestedOneWithoutTodosInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutTodosInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutTodosInput"
        connectOrCreate:
          $ref: "#/components/schemas/ListCreateOrConnectWithoutTodosInput"
        connect:
          $ref: "#/components/schemas/ListWhereUniqueInput"
    UserUpdateOneRequiredWithoutTodosNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTodosInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutTodosInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutTodosInput"
            - $ref: "#/components/schemas/UserUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTodosInput"
    ListUpdateOneRequiredWithoutTodosNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutTodosInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutTodosInput"
        connectOrCreate:
          $ref: "#/components/schemas/ListCreateOrConnectWithoutTodosInput"
        upsert:
          $ref: "#/components/schemas/ListUpsertWithoutTodosInput"
        connect:
          $ref: "#/components/schemas/ListWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateToOneWithWhereWithoutTodosInput"
            - $ref: "#/components/schemas/ListUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/ListUncheckedUpdateWithoutTodosInput"
    CollectionCardCreateNestedManyWithoutCollectionInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateWithoutCollectionInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateWithoutCollectionInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutCollectionInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutCollectionInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutCollectionInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutCollectionInput"
        createMany:
          $ref: "#/components/schemas/CollectionCardCreateManyCollectionInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
    UserCreateNestedOneWithoutCollectionInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutCollectionInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutCollectionInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutCollectionInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    CollectionCardUncheckedCreateNestedManyWithoutCollectionInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateWithoutCollectionInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateWithoutCollectionInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutCollectionInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutCollectionInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutCollectionInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutCollectionInput"
        createMany:
          $ref: "#/components/schemas/CollectionCardCreateManyCollectionInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
    CollectionCardUpdateManyWithoutCollectionNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateWithoutCollectionInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateWithoutCollectionInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutCollectionInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutCollectionInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutCollectionInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutCollectionInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpsertWithWhereUniqueWithoutCollectio\
                nInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUpsertWithWhereUniqueWithoutCollectio\
                  nInput"
        createMany:
          $ref: "#/components/schemas/CollectionCardCreateManyCollectionInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateWithWhereUniqueWithoutCollectio\
                nInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUpdateWithWhereUniqueWithoutCollectio\
                  nInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateManyWithWhereWithoutCollectionI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUpdateManyWithWhereWithoutCollectionI\
                  nput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardScalarWhereInput"
    UserUpdateOneRequiredWithoutCollectionNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutCollectionInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutCollectionInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutCollectionInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutCollectionInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutCollectionInput"
            - $ref: "#/components/schemas/UserUpdateWithoutCollectionInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutCollectionInput"
    CollectionCardUncheckedUpdateManyWithoutCollectionNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateWithoutCollectionInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateWithoutCollectionInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutCollectionInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutCollectionInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutCollectionInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutCollectionInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpsertWithWhereUniqueWithoutCollectio\
                nInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUpsertWithWhereUniqueWithoutCollectio\
                  nInput"
        createMany:
          $ref: "#/components/schemas/CollectionCardCreateManyCollectionInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateWithWhereUniqueWithoutCollectio\
                nInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUpdateWithWhereUniqueWithoutCollectio\
                  nInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateManyWithWhereWithoutCollectionI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUpdateManyWithWhereWithoutCollectionI\
                  nput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardScalarWhereInput"
    CollectionCreateNestedOneWithoutCollectionCardsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateWithoutCollectionCardsInput"
            - $ref: "#/components/schemas/CollectionUncheckedCreateWithoutCollectionCardsInpu\
                t"
        connectOrCreate:
          $ref: "#/components/schemas/CollectionCreateOrConnectWithoutCollectionCardsInpu\
            t"
        connect:
          $ref: "#/components/schemas/CollectionWhereUniqueInput"
    TcgApiCardCreateNestedOneWithoutCollectionCardInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateWithoutCollectionCardInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedCreateWithoutCollectionCardInput"
        connectOrCreate:
          $ref: "#/components/schemas/TcgApiCardCreateOrConnectWithoutCollectionCardInput"
        connect:
          $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
    IntFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: integer
        increment:
          type: integer
        decrement:
          type: integer
        multiply:
          type: integer
        divide:
          type: integer
    CollectionUpdateOneRequiredWithoutCollectionCardsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateWithoutCollectionCardsInput"
            - $ref: "#/components/schemas/CollectionUncheckedCreateWithoutCollectionCardsInpu\
                t"
        connectOrCreate:
          $ref: "#/components/schemas/CollectionCreateOrConnectWithoutCollectionCardsInpu\
            t"
        upsert:
          $ref: "#/components/schemas/CollectionUpsertWithoutCollectionCardsInput"
        connect:
          $ref: "#/components/schemas/CollectionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/CollectionUpdateToOneWithWhereWithoutCollectionCard\
                sInput"
            - $ref: "#/components/schemas/CollectionUpdateWithoutCollectionCardsInput"
            - $ref: "#/components/schemas/CollectionUncheckedUpdateWithoutCollectionCardsInpu\
                t"
    TcgApiCardUpdateOneRequiredWithoutCollectionCardNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateWithoutCollectionCardInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedCreateWithoutCollectionCardInput"
        connectOrCreate:
          $ref: "#/components/schemas/TcgApiCardCreateOrConnectWithoutCollectionCardInput"
        upsert:
          $ref: "#/components/schemas/TcgApiCardUpsertWithoutCollectionCardInput"
        connect:
          $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateToOneWithWhereWithoutCollectionCard\
                Input"
            - $ref: "#/components/schemas/TcgApiCardUpdateWithoutCollectionCardInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedUpdateWithoutCollectionCardInput"
    TcgApiCardCreateNestedManyWithoutSetInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateWithoutSetInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardCreateWithoutSetInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedCreateWithoutSetInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardUncheckedCreateWithoutSetInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateOrConnectWithoutSetInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardCreateOrConnectWithoutSetInput"
        createMany:
          $ref: "#/components/schemas/TcgApiCardCreateManySetInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
    TcgApiCardUpdateManyWithoutSetNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateWithoutSetInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardCreateWithoutSetInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedCreateWithoutSetInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardUncheckedCreateWithoutSetInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateOrConnectWithoutSetInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardCreateOrConnectWithoutSetInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpsertWithWhereUniqueWithoutSetInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardUpsertWithWhereUniqueWithoutSetInput"
        createMany:
          $ref: "#/components/schemas/TcgApiCardCreateManySetInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateWithWhereUniqueWithoutSetInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardUpdateWithWhereUniqueWithoutSetInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateManyWithWhereWithoutSetInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardUpdateManyWithWhereWithoutSetInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardScalarWhereInput"
    TcgApiCardCreatesubtypesInput:
      type: object
      properties:
        set:
          type: array
          items: {}
      required:
        - set
    TcgApiCardCreatetypesInput:
      type: object
      properties:
        set:
          type: array
          items: {}
      required:
        - set
    TcgApiCardCreateevolvesToInput:
      type: object
      properties:
        set:
          type: array
          items: {}
      required:
        - set
    TcgApiCardCreaterulesInput:
      type: object
      properties:
        set:
          type: array
          items: {}
      required:
        - set
    TcgApiCardCreateabilitiesInput:
      type: object
      properties:
        set:
          type: array
          items: {}
      required:
        - set
    TcgApiCardCreateattacksInput:
      type: object
      properties:
        set:
          type: array
          items: {}
      required:
        - set
    TcgApiCardCreateweaknessesInput:
      type: object
      properties:
        set:
          type: array
          items: {}
      required:
        - set
    TcgApiCardCreateresistancesInput:
      type: object
      properties:
        set:
          type: array
          items: {}
      required:
        - set
    TcgApiCardCreateretreatCostInput:
      type: object
      properties:
        set:
          type: array
          items:
            type: string
      required:
        - set
    TcgApiCardCreatenationalPokedexNumbersInput:
      type: object
      properties:
        set:
          type: array
          items:
            type: integer
      required:
        - set
    TcgApiSetCreateNestedOneWithoutTcgApiCardsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetCreateWithoutTcgApiCardsInput"
            - $ref: "#/components/schemas/TcgApiSetUncheckedCreateWithoutTcgApiCardsInput"
        connectOrCreate:
          $ref: "#/components/schemas/TcgApiSetCreateOrConnectWithoutTcgApiCardsInput"
        connect:
          $ref: "#/components/schemas/TcgApiSetWhereUniqueInput"
    CollectionCardCreateNestedManyWithoutTcgApiCardInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateWithoutTcgApiCardInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateWithoutTcgApiCardInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutTcgApiCardInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutTcgApiCardInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutTcgApiCardInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutTcgApiCardInput"
        createMany:
          $ref: "#/components/schemas/CollectionCardCreateManyTcgApiCardInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
    CollectionCardUncheckedCreateNestedManyWithoutTcgApiCardInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateWithoutTcgApiCardInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateWithoutTcgApiCardInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutTcgApiCardInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutTcgApiCardInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutTcgApiCardInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutTcgApiCardInput"
        createMany:
          $ref: "#/components/schemas/CollectionCardCreateManyTcgApiCardInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
    TcgApiCardUpdatesubtypesInput:
      type: object
      properties:
        set:
          type: array
          items: {}
        push:
          oneOf:
            - {}
            - type: array
              items: {}
    TcgApiCardUpdatetypesInput:
      type: object
      properties:
        set:
          type: array
          items: {}
        push:
          oneOf:
            - {}
            - type: array
              items: {}
    TcgApiCardUpdateevolvesToInput:
      type: object
      properties:
        set:
          type: array
          items: {}
        push:
          oneOf:
            - {}
            - type: array
              items: {}
    TcgApiCardUpdaterulesInput:
      type: object
      properties:
        set:
          type: array
          items: {}
        push:
          oneOf:
            - {}
            - type: array
              items: {}
    TcgApiCardUpdateabilitiesInput:
      type: object
      properties:
        set:
          type: array
          items: {}
        push:
          oneOf:
            - {}
            - type: array
              items: {}
    TcgApiCardUpdateattacksInput:
      type: object
      properties:
        set:
          type: array
          items: {}
        push:
          oneOf:
            - {}
            - type: array
              items: {}
    TcgApiCardUpdateweaknessesInput:
      type: object
      properties:
        set:
          type: array
          items: {}
        push:
          oneOf:
            - {}
            - type: array
              items: {}
    TcgApiCardUpdateresistancesInput:
      type: object
      properties:
        set:
          type: array
          items: {}
        push:
          oneOf:
            - {}
            - type: array
              items: {}
    TcgApiCardUpdateretreatCostInput:
      type: object
      properties:
        set:
          type: array
          items:
            type: string
        push:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
    TcgApiCardUpdatenationalPokedexNumbersInput:
      type: object
      properties:
        set:
          type: array
          items:
            type: integer
        push:
          oneOf:
            - type: integer
            - type: array
              items:
                type: integer
    TcgApiSetUpdateOneRequiredWithoutTcgApiCardsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetCreateWithoutTcgApiCardsInput"
            - $ref: "#/components/schemas/TcgApiSetUncheckedCreateWithoutTcgApiCardsInput"
        connectOrCreate:
          $ref: "#/components/schemas/TcgApiSetCreateOrConnectWithoutTcgApiCardsInput"
        upsert:
          $ref: "#/components/schemas/TcgApiSetUpsertWithoutTcgApiCardsInput"
        connect:
          $ref: "#/components/schemas/TcgApiSetWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetUpdateToOneWithWhereWithoutTcgApiCardsInpu\
                t"
            - $ref: "#/components/schemas/TcgApiSetUpdateWithoutTcgApiCardsInput"
            - $ref: "#/components/schemas/TcgApiSetUncheckedUpdateWithoutTcgApiCardsInput"
    CollectionCardUpdateManyWithoutTcgApiCardNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateWithoutTcgApiCardInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateWithoutTcgApiCardInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutTcgApiCardInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutTcgApiCardInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutTcgApiCardInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutTcgApiCardInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpsertWithWhereUniqueWithoutTcgApiCar\
                dInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUpsertWithWhereUniqueWithoutTcgApiCar\
                  dInput"
        createMany:
          $ref: "#/components/schemas/CollectionCardCreateManyTcgApiCardInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateWithWhereUniqueWithoutTcgApiCar\
                dInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUpdateWithWhereUniqueWithoutTcgApiCar\
                  dInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateManyWithWhereWithoutTcgApiCardI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUpdateManyWithWhereWithoutTcgApiCardI\
                  nput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardScalarWhereInput"
    CollectionCardUncheckedUpdateManyWithoutTcgApiCardNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateWithoutTcgApiCardInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateWithoutTcgApiCardInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutTcgApiCardInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutTcgApiCardInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutTcgApiCardInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateOrConnectWithoutTcgApiCardInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpsertWithWhereUniqueWithoutTcgApiCar\
                dInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUpsertWithWhereUniqueWithoutTcgApiCar\
                  dInput"
        createMany:
          $ref: "#/components/schemas/CollectionCardCreateManyTcgApiCardInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateWithWhereUniqueWithoutTcgApiCar\
                dInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUpdateWithWhereUniqueWithoutTcgApiCar\
                  dInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateManyWithWhereWithoutTcgApiCardI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardUpdateManyWithWhereWithoutTcgApiCardI\
                  nput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardScalarWhereInput"
    NestedStringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    NestedStringNullableFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
    NestedIntNullableFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
    NestedStringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    NestedIntFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntFilter"
    NestedStringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    NestedIntNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatNullableFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedIntNullableFilter"
    NestedFloatNullableFilter:
      type: object
      properties:
        equals:
          type: number
        in:
          type: array
          items:
            type: number
        notIn:
          type: array
          items:
            type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatNullableFilter"
    NestedDateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedDateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedDateTimeNullableFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    NestedDateTimeNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    NestedEnumSpaceUserRoleFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/SpaceUserRole"
        in:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUserRole"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUserRole"
        not:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserRole"
            - $ref: "#/components/schemas/NestedEnumSpaceUserRoleFilter"
    NestedEnumSpaceUserRoleWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/SpaceUserRole"
        in:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUserRole"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUserRole"
        not:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserRole"
            - $ref: "#/components/schemas/NestedEnumSpaceUserRoleWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumSpaceUserRoleFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumSpaceUserRoleFilter"
    NestedBoolFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolFilter"
    NestedBoolWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolFilter"
    NestedIntWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedIntFilter"
        _max:
          $ref: "#/components/schemas/NestedIntFilter"
    NestedFloatFilter:
      type: object
      properties:
        equals:
          type: number
        in:
          type: array
          items:
            type: number
        notIn:
          type: array
          items:
            type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatFilter"
    NestedJsonNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        path:
          type: array
          items:
            type: string
        string_contains:
          type: string
        string_starts_with:
          type: string
        string_ends_with:
          type: string
        array_contains: {}
        array_starts_with: {}
        array_ends_with: {}
        lt: {}
        lte: {}
        gt: {}
        gte: {}
        not:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
    NestedJsonFilter:
      type: object
      properties:
        equals:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        path:
          type: array
          items:
            type: string
        string_contains:
          type: string
        string_starts_with:
          type: string
        string_ends_with:
          type: string
        array_contains: {}
        array_starts_with: {}
        array_ends_with: {}
        lt: {}
        lte: {}
        gt: {}
        gte: {}
        not:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
    UserCreateWithoutAccountsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserCreateNestedManyWithoutUserInput"
        todos:
          $ref: "#/components/schemas/TodoCreateNestedManyWithoutOwnerInput"
        lists:
          $ref: "#/components/schemas/ListCreateNestedManyWithoutOwnerInput"
        collection:
          $ref: "#/components/schemas/CollectionCreateNestedManyWithoutOwnerInput"
      required:
        - password
    UserUncheckedCreateWithoutAccountsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        sessions:
          $ref: "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUncheckedCreateNestedManyWithoutUserInput"
        todos:
          $ref: "#/components/schemas/TodoUncheckedCreateNestedManyWithoutOwnerInput"
        lists:
          $ref: "#/components/schemas/ListUncheckedCreateNestedManyWithoutOwnerInput"
        collection:
          $ref: "#/components/schemas/CollectionUncheckedCreateNestedManyWithoutOwnerInpu\
            t"
      required:
        - password
    UserCreateOrConnectWithoutAccountsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
      required:
        - where
        - create
    UserUpsertWithoutAccountsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutAccountsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
      required:
        - data
    UserUpdateWithoutAccountsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUpdateManyWithoutUserNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUpdateManyWithoutOwnerNestedInput"
        lists:
          $ref: "#/components/schemas/ListUpdateManyWithoutOwnerNestedInput"
        collection:
          $ref: "#/components/schemas/CollectionUpdateManyWithoutOwnerNestedInput"
    UserUncheckedUpdateWithoutAccountsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutUserNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUncheckedUpdateManyWithoutOwnerNestedInput"
        lists:
          $ref: "#/components/schemas/ListUncheckedUpdateManyWithoutOwnerNestedInput"
        collection:
          $ref: "#/components/schemas/CollectionUncheckedUpdateManyWithoutOwnerNestedInpu\
            t"
    UserCreateWithoutSessionsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserCreateNestedManyWithoutUserInput"
        todos:
          $ref: "#/components/schemas/TodoCreateNestedManyWithoutOwnerInput"
        lists:
          $ref: "#/components/schemas/ListCreateNestedManyWithoutOwnerInput"
        collection:
          $ref: "#/components/schemas/CollectionCreateNestedManyWithoutOwnerInput"
      required:
        - password
    UserUncheckedCreateWithoutSessionsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        accounts:
          $ref: "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUncheckedCreateNestedManyWithoutUserInput"
        todos:
          $ref: "#/components/schemas/TodoUncheckedCreateNestedManyWithoutOwnerInput"
        lists:
          $ref: "#/components/schemas/ListUncheckedCreateNestedManyWithoutOwnerInput"
        collection:
          $ref: "#/components/schemas/CollectionUncheckedCreateNestedManyWithoutOwnerInpu\
            t"
      required:
        - password
    UserCreateOrConnectWithoutSessionsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
      required:
        - where
        - create
    UserUpsertWithoutSessionsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutSessionsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
      required:
        - data
    UserUpdateWithoutSessionsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUpdateManyWithoutUserNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUpdateManyWithoutOwnerNestedInput"
        lists:
          $ref: "#/components/schemas/ListUpdateManyWithoutOwnerNestedInput"
        collection:
          $ref: "#/components/schemas/CollectionUpdateManyWithoutOwnerNestedInput"
    UserUncheckedUpdateWithoutSessionsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutUserNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUncheckedUpdateManyWithoutOwnerNestedInput"
        lists:
          $ref: "#/components/schemas/ListUncheckedUpdateManyWithoutOwnerNestedInput"
        collection:
          $ref: "#/components/schemas/CollectionUncheckedUpdateManyWithoutOwnerNestedInpu\
            t"
    AccountCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
      required:
        - type
        - provider
        - providerAccountId
    AccountUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
      required:
        - type
        - provider
        - providerAccountId
    AccountCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    AccountCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    SessionCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - expires
    SessionUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - expires
    SessionCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    SessionCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    SpaceUserCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        role:
          $ref: "#/components/schemas/SpaceUserRole"
        space:
          $ref: "#/components/schemas/SpaceCreateNestedOneWithoutMembersInput"
      required:
        - role
        - space
    SpaceUserUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        spaceId:
          type: string
        role:
          $ref: "#/components/schemas/SpaceUserRole"
      required:
        - spaceId
        - role
    SpaceUserCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateWithoutUserInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    SpaceUserCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TodoCreateWithoutOwnerInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        title:
          type: string
        completedAt:
          type: string
          format: date-time
        list:
          $ref: "#/components/schemas/ListCreateNestedOneWithoutTodosInput"
      required:
        - title
        - list
    TodoUncheckedCreateWithoutOwnerInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        listId:
          type: string
        title:
          type: string
        completedAt:
          type: string
          format: date-time
      required:
        - listId
        - title
    TodoCreateOrConnectWithoutOwnerInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodoWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
      required:
        - where
        - create
    TodoCreateManyOwnerInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateManyOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateManyOwnerInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    ListCreateWithoutOwnerInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        title:
          type: string
        private:
          type: boolean
        space:
          $ref: "#/components/schemas/SpaceCreateNestedOneWithoutListsInput"
        todos:
          $ref: "#/components/schemas/TodoCreateNestedManyWithoutListInput"
      required:
        - title
        - space
    ListUncheckedCreateWithoutOwnerInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        spaceId:
          type: string
        title:
          type: string
        private:
          type: boolean
        todos:
          $ref: "#/components/schemas/TodoUncheckedCreateNestedManyWithoutListInput"
      required:
        - spaceId
        - title
    ListCreateOrConnectWithoutOwnerInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
      required:
        - where
        - create
    ListCreateManyOwnerInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ListCreateManyOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateManyOwnerInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    CollectionCreateWithoutOwnerInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        tcgApiFilter:
          type: string
        collecting_variations:
          type: boolean
        cardSort:
          type: string
        cardApiOrderBy:
          type: string
        collectionCards:
          $ref: "#/components/schemas/CollectionCardCreateNestedManyWithoutCollectionInpu\
            t"
      required:
        - name
        - tcgApiFilter
        - collecting_variations
        - cardSort
        - cardApiOrderBy
    CollectionUncheckedCreateWithoutOwnerInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        tcgApiFilter:
          type: string
        collecting_variations:
          type: boolean
        cardSort:
          type: string
        cardApiOrderBy:
          type: string
        collectionCards:
          $ref: "#/components/schemas/CollectionCardUncheckedCreateNestedManyWithoutColle\
            ctionInput"
      required:
        - name
        - tcgApiFilter
        - collecting_variations
        - cardSort
        - cardApiOrderBy
    CollectionCreateOrConnectWithoutOwnerInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/CollectionUncheckedCreateWithoutOwnerInput"
      required:
        - where
        - create
    CollectionCreateManyOwnerInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateManyOwnerInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCreateManyOwnerInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    AccountUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    AccountUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    AccountUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateManyMutationInput"
            - $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    AccountScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
    SessionUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    SessionUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    SessionUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateManyMutationInput"
            - $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    SessionScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        sessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    SpaceUserUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateWithoutUserInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateWithoutUserInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    SpaceUserUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateWithoutUserInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    SpaceUserUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceUserScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateManyMutationInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    SpaceUserScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SpaceUserScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        spaceId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumSpaceUserRoleFilter"
            - $ref: "#/components/schemas/SpaceUserRole"
    TodoUpsertWithWhereUniqueWithoutOwnerInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodoWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateWithoutOwnerInput"
            - $ref: "#/components/schemas/TodoUncheckedUpdateWithoutOwnerInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/TodoUncheckedCreateWithoutOwnerInput"
      required:
        - where
        - update
        - create
    TodoUpdateWithWhereUniqueWithoutOwnerInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodoWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateWithoutOwnerInput"
            - $ref: "#/components/schemas/TodoUncheckedUpdateWithoutOwnerInput"
      required:
        - where
        - data
    TodoUpdateManyWithWhereWithoutOwnerInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodoScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateManyMutationInput"
            - $ref: "#/components/schemas/TodoUncheckedUpdateManyWithoutOwnerInput"
      required:
        - where
        - data
    TodoScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TodoScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TodoScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TodoScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        ownerId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        listId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        title:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        completedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
    ListUpsertWithWhereUniqueWithoutOwnerInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateWithoutOwnerInput"
            - $ref: "#/components/schemas/ListUncheckedUpdateWithoutOwnerInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutOwnerInput"
      required:
        - where
        - update
        - create
    ListUpdateWithWhereUniqueWithoutOwnerInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateWithoutOwnerInput"
            - $ref: "#/components/schemas/ListUncheckedUpdateWithoutOwnerInput"
      required:
        - where
        - data
    ListUpdateManyWithWhereWithoutOwnerInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateManyMutationInput"
            - $ref: "#/components/schemas/ListUncheckedUpdateManyWithoutOwnerInput"
      required:
        - where
        - data
    ListScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ListScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ListScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ListScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        spaceId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        ownerId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        title:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        private:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
    CollectionUpsertWithWhereUniqueWithoutOwnerInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/CollectionUpdateWithoutOwnerInput"
            - $ref: "#/components/schemas/CollectionUncheckedUpdateWithoutOwnerInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateWithoutOwnerInput"
            - $ref: "#/components/schemas/CollectionUncheckedCreateWithoutOwnerInput"
      required:
        - where
        - update
        - create
    CollectionUpdateWithWhereUniqueWithoutOwnerInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/CollectionUpdateWithoutOwnerInput"
            - $ref: "#/components/schemas/CollectionUncheckedUpdateWithoutOwnerInput"
      required:
        - where
        - data
    CollectionUpdateManyWithWhereWithoutOwnerInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/CollectionUpdateManyMutationInput"
            - $ref: "#/components/schemas/CollectionUncheckedUpdateManyWithoutOwnerInput"
      required:
        - where
        - data
    CollectionScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/CollectionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/CollectionScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/CollectionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        ownerId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        tcgApiFilter:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        collecting_variations:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        cardSort:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        cardApiOrderBy:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
    SpaceUserCreateWithoutSpaceInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        role:
          $ref: "#/components/schemas/SpaceUserRole"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutSpacesInput"
      required:
        - role
        - user
    SpaceUserUncheckedCreateWithoutSpaceInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        userId:
          type: string
        role:
          $ref: "#/components/schemas/SpaceUserRole"
      required:
        - userId
        - role
    SpaceUserCreateOrConnectWithoutSpaceInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
      required:
        - where
        - create
    SpaceUserCreateManySpaceInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateManySpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/SpaceUserCreateManySpaceInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    ListCreateWithoutSpaceInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        title:
          type: string
        private:
          type: boolean
        owner:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutListsInput"
        todos:
          $ref: "#/components/schemas/TodoCreateNestedManyWithoutListInput"
      required:
        - title
        - owner
    ListUncheckedCreateWithoutSpaceInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        ownerId:
          type: string
        title:
          type: string
        private:
          type: boolean
        todos:
          $ref: "#/components/schemas/TodoUncheckedCreateNestedManyWithoutListInput"
      required:
        - ownerId
        - title
    ListCreateOrConnectWithoutSpaceInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutSpaceInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
      required:
        - where
        - create
    ListCreateManySpaceInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ListCreateManySpaceInput"
            - type: array
              items:
                $ref: "#/components/schemas/ListCreateManySpaceInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    SpaceUserUpsertWithWhereUniqueWithoutSpaceInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateWithoutSpaceInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedUpdateWithoutSpaceInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserCreateWithoutSpaceInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedCreateWithoutSpaceInput"
      required:
        - where
        - update
        - create
    SpaceUserUpdateWithWhereUniqueWithoutSpaceInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateWithoutSpaceInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedUpdateWithoutSpaceInput"
      required:
        - where
        - data
    SpaceUserUpdateManyWithWhereWithoutSpaceInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceUserScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserUpdateManyMutationInput"
            - $ref: "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutSpaceInput"
      required:
        - where
        - data
    ListUpsertWithWhereUniqueWithoutSpaceInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateWithoutSpaceInput"
            - $ref: "#/components/schemas/ListUncheckedUpdateWithoutSpaceInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutSpaceInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutSpaceInput"
      required:
        - where
        - update
        - create
    ListUpdateWithWhereUniqueWithoutSpaceInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateWithoutSpaceInput"
            - $ref: "#/components/schemas/ListUncheckedUpdateWithoutSpaceInput"
      required:
        - where
        - data
    ListUpdateManyWithWhereWithoutSpaceInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateManyMutationInput"
            - $ref: "#/components/schemas/ListUncheckedUpdateManyWithoutSpaceInput"
      required:
        - where
        - data
    SpaceCreateWithoutMembersInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        slug:
          type: string
        lists:
          $ref: "#/components/schemas/ListCreateNestedManyWithoutSpaceInput"
      required:
        - name
        - slug
    SpaceUncheckedCreateWithoutMembersInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        slug:
          type: string
        lists:
          $ref: "#/components/schemas/ListUncheckedCreateNestedManyWithoutSpaceInput"
      required:
        - name
        - slug
    SpaceCreateOrConnectWithoutMembersInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceCreateWithoutMembersInput"
            - $ref: "#/components/schemas/SpaceUncheckedCreateWithoutMembersInput"
      required:
        - where
        - create
    UserCreateWithoutSpacesInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
        todos:
          $ref: "#/components/schemas/TodoCreateNestedManyWithoutOwnerInput"
        lists:
          $ref: "#/components/schemas/ListCreateNestedManyWithoutOwnerInput"
        collection:
          $ref: "#/components/schemas/CollectionCreateNestedManyWithoutOwnerInput"
      required:
        - password
    UserUncheckedCreateWithoutSpacesInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        accounts:
          $ref: "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
        todos:
          $ref: "#/components/schemas/TodoUncheckedCreateNestedManyWithoutOwnerInput"
        lists:
          $ref: "#/components/schemas/ListUncheckedCreateNestedManyWithoutOwnerInput"
        collection:
          $ref: "#/components/schemas/CollectionUncheckedCreateNestedManyWithoutOwnerInpu\
            t"
      required:
        - password
    UserCreateOrConnectWithoutSpacesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSpacesInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSpacesInput"
      required:
        - where
        - create
    SpaceUpsertWithoutMembersInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/SpaceUpdateWithoutMembersInput"
            - $ref: "#/components/schemas/SpaceUncheckedUpdateWithoutMembersInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceCreateWithoutMembersInput"
            - $ref: "#/components/schemas/SpaceUncheckedCreateWithoutMembersInput"
        where:
          $ref: "#/components/schemas/SpaceWhereInput"
      required:
        - update
        - create
    SpaceUpdateToOneWithWhereWithoutMembersInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SpaceUpdateWithoutMembersInput"
            - $ref: "#/components/schemas/SpaceUncheckedUpdateWithoutMembersInput"
      required:
        - data
    SpaceUpdateWithoutMembersInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        lists:
          $ref: "#/components/schemas/ListUpdateManyWithoutSpaceNestedInput"
    SpaceUncheckedUpdateWithoutMembersInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        lists:
          $ref: "#/components/schemas/ListUncheckedUpdateManyWithoutSpaceNestedInput"
    UserUpsertWithoutSpacesInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSpacesInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSpacesInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSpacesInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSpacesInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutSpacesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSpacesInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSpacesInput"
      required:
        - data
    UserUpdateWithoutSpacesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUpdateManyWithoutOwnerNestedInput"
        lists:
          $ref: "#/components/schemas/ListUpdateManyWithoutOwnerNestedInput"
        collection:
          $ref: "#/components/schemas/CollectionUpdateManyWithoutOwnerNestedInput"
    UserUncheckedUpdateWithoutSpacesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUncheckedUpdateManyWithoutOwnerNestedInput"
        lists:
          $ref: "#/components/schemas/ListUncheckedUpdateManyWithoutOwnerNestedInput"
        collection:
          $ref: "#/components/schemas/CollectionUncheckedUpdateManyWithoutOwnerNestedInpu\
            t"
    SpaceCreateWithoutListsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        slug:
          type: string
        members:
          $ref: "#/components/schemas/SpaceUserCreateNestedManyWithoutSpaceInput"
      required:
        - name
        - slug
    SpaceUncheckedCreateWithoutListsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        slug:
          type: string
        members:
          $ref: "#/components/schemas/SpaceUserUncheckedCreateNestedManyWithoutSpaceInput"
      required:
        - name
        - slug
    SpaceCreateOrConnectWithoutListsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceCreateWithoutListsInput"
            - $ref: "#/components/schemas/SpaceUncheckedCreateWithoutListsInput"
      required:
        - where
        - create
    UserCreateWithoutListsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserCreateNestedManyWithoutUserInput"
        todos:
          $ref: "#/components/schemas/TodoCreateNestedManyWithoutOwnerInput"
        collection:
          $ref: "#/components/schemas/CollectionCreateNestedManyWithoutOwnerInput"
      required:
        - password
    UserUncheckedCreateWithoutListsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        accounts:
          $ref: "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUncheckedCreateNestedManyWithoutUserInput"
        todos:
          $ref: "#/components/schemas/TodoUncheckedCreateNestedManyWithoutOwnerInput"
        collection:
          $ref: "#/components/schemas/CollectionUncheckedCreateNestedManyWithoutOwnerInpu\
            t"
      required:
        - password
    UserCreateOrConnectWithoutListsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutListsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutListsInput"
      required:
        - where
        - create
    TodoCreateWithoutListInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        title:
          type: string
        completedAt:
          type: string
          format: date-time
        owner:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTodosInput"
      required:
        - title
        - owner
    TodoUncheckedCreateWithoutListInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        ownerId:
          type: string
        title:
          type: string
        completedAt:
          type: string
          format: date-time
      required:
        - ownerId
        - title
    TodoCreateOrConnectWithoutListInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodoWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateWithoutListInput"
            - $ref: "#/components/schemas/TodoUncheckedCreateWithoutListInput"
      required:
        - where
        - create
    TodoCreateManyListInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateManyListInput"
            - type: array
              items:
                $ref: "#/components/schemas/TodoCreateManyListInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    SpaceUpsertWithoutListsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/SpaceUpdateWithoutListsInput"
            - $ref: "#/components/schemas/SpaceUncheckedUpdateWithoutListsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SpaceCreateWithoutListsInput"
            - $ref: "#/components/schemas/SpaceUncheckedCreateWithoutListsInput"
        where:
          $ref: "#/components/schemas/SpaceWhereInput"
      required:
        - update
        - create
    SpaceUpdateToOneWithWhereWithoutListsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SpaceUpdateWithoutListsInput"
            - $ref: "#/components/schemas/SpaceUncheckedUpdateWithoutListsInput"
      required:
        - data
    SpaceUpdateWithoutListsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        members:
          $ref: "#/components/schemas/SpaceUserUpdateManyWithoutSpaceNestedInput"
    SpaceUncheckedUpdateWithoutListsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        members:
          $ref: "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutSpaceNestedInput"
    UserUpsertWithoutListsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutListsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutListsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutListsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutListsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutListsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutListsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutListsInput"
      required:
        - data
    UserUpdateWithoutListsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUpdateManyWithoutUserNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUpdateManyWithoutOwnerNestedInput"
        collection:
          $ref: "#/components/schemas/CollectionUpdateManyWithoutOwnerNestedInput"
    UserUncheckedUpdateWithoutListsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutUserNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUncheckedUpdateManyWithoutOwnerNestedInput"
        collection:
          $ref: "#/components/schemas/CollectionUncheckedUpdateManyWithoutOwnerNestedInpu\
            t"
    TodoUpsertWithWhereUniqueWithoutListInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodoWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateWithoutListInput"
            - $ref: "#/components/schemas/TodoUncheckedUpdateWithoutListInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TodoCreateWithoutListInput"
            - $ref: "#/components/schemas/TodoUncheckedCreateWithoutListInput"
      required:
        - where
        - update
        - create
    TodoUpdateWithWhereUniqueWithoutListInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodoWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateWithoutListInput"
            - $ref: "#/components/schemas/TodoUncheckedUpdateWithoutListInput"
      required:
        - where
        - data
    TodoUpdateManyWithWhereWithoutListInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodoScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TodoUpdateManyMutationInput"
            - $ref: "#/components/schemas/TodoUncheckedUpdateManyWithoutListInput"
      required:
        - where
        - data
    UserCreateWithoutTodosInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserCreateNestedManyWithoutUserInput"
        lists:
          $ref: "#/components/schemas/ListCreateNestedManyWithoutOwnerInput"
        collection:
          $ref: "#/components/schemas/CollectionCreateNestedManyWithoutOwnerInput"
      required:
        - password
    UserUncheckedCreateWithoutTodosInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        accounts:
          $ref: "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUncheckedCreateNestedManyWithoutUserInput"
        lists:
          $ref: "#/components/schemas/ListUncheckedCreateNestedManyWithoutOwnerInput"
        collection:
          $ref: "#/components/schemas/CollectionUncheckedCreateNestedManyWithoutOwnerInpu\
            t"
      required:
        - password
    UserCreateOrConnectWithoutTodosInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
      required:
        - where
        - create
    ListCreateWithoutTodosInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        title:
          type: string
        private:
          type: boolean
        space:
          $ref: "#/components/schemas/SpaceCreateNestedOneWithoutListsInput"
        owner:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutListsInput"
      required:
        - title
        - space
        - owner
    ListUncheckedCreateWithoutTodosInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        spaceId:
          type: string
        ownerId:
          type: string
        title:
          type: string
        private:
          type: boolean
      required:
        - spaceId
        - ownerId
        - title
    ListCreateOrConnectWithoutTodosInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutTodosInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutTodosInput"
      required:
        - where
        - create
    UserUpsertWithoutTodosInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTodosInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTodosInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutTodosInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTodosInput"
      required:
        - data
    UserUpdateWithoutTodosInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUpdateManyWithoutUserNestedInput"
        lists:
          $ref: "#/components/schemas/ListUpdateManyWithoutOwnerNestedInput"
        collection:
          $ref: "#/components/schemas/CollectionUpdateManyWithoutOwnerNestedInput"
    UserUncheckedUpdateWithoutTodosInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutUserNestedInput"
        lists:
          $ref: "#/components/schemas/ListUncheckedUpdateManyWithoutOwnerNestedInput"
        collection:
          $ref: "#/components/schemas/CollectionUncheckedUpdateManyWithoutOwnerNestedInpu\
            t"
    ListUpsertWithoutTodosInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/ListUncheckedUpdateWithoutTodosInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ListCreateWithoutTodosInput"
            - $ref: "#/components/schemas/ListUncheckedCreateWithoutTodosInput"
        where:
          $ref: "#/components/schemas/ListWhereInput"
      required:
        - update
        - create
    ListUpdateToOneWithWhereWithoutTodosInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ListUpdateWithoutTodosInput"
            - $ref: "#/components/schemas/ListUncheckedUpdateWithoutTodosInput"
      required:
        - data
    ListUpdateWithoutTodosInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        private:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        space:
          $ref: "#/components/schemas/SpaceUpdateOneRequiredWithoutListsNestedInput"
        owner:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutListsNestedInput"
    ListUncheckedUpdateWithoutTodosInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        spaceId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        ownerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        private:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    CollectionCardCreateWithoutCollectionInput:
      type: object
      properties:
        id:
          type: string
        index:
          type: integer
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
        tcgApiCard:
          $ref: "#/components/schemas/TcgApiCardCreateNestedOneWithoutCollectionCardInput"
      required:
        - index
        - owned
        - ownedVariation
        - awaitingOwnership
        - awaitingOwnershipVariation
        - tcgApiCard
    CollectionCardUncheckedCreateWithoutCollectionInput:
      type: object
      properties:
        id:
          type: string
        tcgApiCardId:
          type: string
        index:
          type: integer
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
      required:
        - tcgApiCardId
        - index
        - owned
        - ownedVariation
        - awaitingOwnership
        - awaitingOwnershipVariation
    CollectionCardCreateOrConnectWithoutCollectionInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateWithoutCollectionInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutCollectionInput"
      required:
        - where
        - create
    CollectionCardCreateManyCollectionInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateManyCollectionInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateManyCollectionInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    UserCreateWithoutCollectionInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserCreateNestedManyWithoutUserInput"
        todos:
          $ref: "#/components/schemas/TodoCreateNestedManyWithoutOwnerInput"
        lists:
          $ref: "#/components/schemas/ListCreateNestedManyWithoutOwnerInput"
      required:
        - password
    UserUncheckedCreateWithoutCollectionInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        accounts:
          $ref: "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUncheckedCreateNestedManyWithoutUserInput"
        todos:
          $ref: "#/components/schemas/TodoUncheckedCreateNestedManyWithoutOwnerInput"
        lists:
          $ref: "#/components/schemas/ListUncheckedCreateNestedManyWithoutOwnerInput"
      required:
        - password
    UserCreateOrConnectWithoutCollectionInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutCollectionInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutCollectionInput"
      required:
        - where
        - create
    CollectionCardUpsertWithWhereUniqueWithoutCollectionInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateWithoutCollectionInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedUpdateWithoutCollectionInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateWithoutCollectionInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutCollectionInput"
      required:
        - where
        - update
        - create
    CollectionCardUpdateWithWhereUniqueWithoutCollectionInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateWithoutCollectionInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedUpdateWithoutCollectionInput"
      required:
        - where
        - data
    CollectionCardUpdateManyWithWhereWithoutCollectionInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionCardScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateManyMutationInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedUpdateManyWithoutCollectionI\
                nput"
      required:
        - where
        - data
    CollectionCardScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/CollectionCardScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        collectionId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        tcgApiCardId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        index:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        owned:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        ownedVariation:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        awaitingOwnership:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        awaitingOwnershipVariation:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
    UserUpsertWithoutCollectionInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutCollectionInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutCollectionInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutCollectionInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutCollectionInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutCollectionInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutCollectionInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutCollectionInput"
      required:
        - data
    UserUpdateWithoutCollectionInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUpdateManyWithoutUserNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUpdateManyWithoutOwnerNestedInput"
        lists:
          $ref: "#/components/schemas/ListUpdateManyWithoutOwnerNestedInput"
    UserUncheckedUpdateWithoutCollectionInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        accounts:
          $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
        spaces:
          $ref: "#/components/schemas/SpaceUserUncheckedUpdateManyWithoutUserNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUncheckedUpdateManyWithoutOwnerNestedInput"
        lists:
          $ref: "#/components/schemas/ListUncheckedUpdateManyWithoutOwnerNestedInput"
    CollectionCreateWithoutCollectionCardsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        tcgApiFilter:
          type: string
        collecting_variations:
          type: boolean
        cardSort:
          type: string
        cardApiOrderBy:
          type: string
        owner:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutCollectionInput"
      required:
        - name
        - tcgApiFilter
        - collecting_variations
        - cardSort
        - cardApiOrderBy
        - owner
    CollectionUncheckedCreateWithoutCollectionCardsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ownerId:
          type: string
        tcgApiFilter:
          type: string
        collecting_variations:
          type: boolean
        cardSort:
          type: string
        cardApiOrderBy:
          type: string
      required:
        - name
        - ownerId
        - tcgApiFilter
        - collecting_variations
        - cardSort
        - cardApiOrderBy
    CollectionCreateOrConnectWithoutCollectionCardsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateWithoutCollectionCardsInput"
            - $ref: "#/components/schemas/CollectionUncheckedCreateWithoutCollectionCardsInpu\
                t"
      required:
        - where
        - create
    TcgApiCardCreateWithoutCollectionCardInput:
      type: object
      properties:
        id:
          type: string
        cardTcgId:
          type: string
        setTcgId:
          type: string
        name:
          type: string
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatesubtypesInput"
            - type: array
              items: {}
        hp:
          type: string
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          type: string
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          type: integer
        number:
          type: string
        artist:
          type: string
        rarity:
          type: string
        flavorText:
          type: string
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        set:
          $ref: "#/components/schemas/TcgApiSetCreateNestedOneWithoutTcgApiCardsInput"
      required:
        - cardTcgId
        - setTcgId
        - name
        - supertype
        - hp
        - evolvesFrom
        - ancientTrait
        - convertedRetreatCost
        - number
        - artist
        - rarity
        - flavorText
        - images
        - set
    TcgApiCardUncheckedCreateWithoutCollectionCardInput:
      type: object
      properties:
        id:
          type: string
        cardTcgId:
          type: string
        setTcgId:
          type: string
        name:
          type: string
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatesubtypesInput"
            - type: array
              items: {}
        hp:
          type: string
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          type: string
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          type: integer
        number:
          type: string
        artist:
          type: string
        rarity:
          type: string
        flavorText:
          type: string
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        setId:
          type: string
      required:
        - cardTcgId
        - setTcgId
        - name
        - supertype
        - hp
        - evolvesFrom
        - ancientTrait
        - convertedRetreatCost
        - number
        - artist
        - rarity
        - flavorText
        - images
        - setId
    TcgApiCardCreateOrConnectWithoutCollectionCardInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateWithoutCollectionCardInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedCreateWithoutCollectionCardInput"
      required:
        - where
        - create
    CollectionUpsertWithoutCollectionCardsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/CollectionUpdateWithoutCollectionCardsInput"
            - $ref: "#/components/schemas/CollectionUncheckedUpdateWithoutCollectionCardsInpu\
                t"
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCreateWithoutCollectionCardsInput"
            - $ref: "#/components/schemas/CollectionUncheckedCreateWithoutCollectionCardsInpu\
                t"
        where:
          $ref: "#/components/schemas/CollectionWhereInput"
      required:
        - update
        - create
    CollectionUpdateToOneWithWhereWithoutCollectionCardsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/CollectionUpdateWithoutCollectionCardsInput"
            - $ref: "#/components/schemas/CollectionUncheckedUpdateWithoutCollectionCardsInpu\
                t"
      required:
        - data
    CollectionUpdateWithoutCollectionCardsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tcgApiFilter:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        collecting_variations:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        cardSort:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardApiOrderBy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        owner:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutCollectionNestedInput"
    CollectionUncheckedUpdateWithoutCollectionCardsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        ownerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tcgApiFilter:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        collecting_variations:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        cardSort:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardApiOrderBy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    TcgApiCardUpsertWithoutCollectionCardInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateWithoutCollectionCardInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedUpdateWithoutCollectionCardInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateWithoutCollectionCardInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedCreateWithoutCollectionCardInput"
        where:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
      required:
        - update
        - create
    TcgApiCardUpdateToOneWithWhereWithoutCollectionCardInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateWithoutCollectionCardInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedUpdateWithoutCollectionCardInput"
      required:
        - data
    TcgApiCardUpdateWithoutCollectionCardInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        setTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatesubtypesInput"
            - type: array
              items: {}
        hp:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        number:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        artist:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rarity:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        flavorText:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        set:
          $ref: "#/components/schemas/TcgApiSetUpdateOneRequiredWithoutTcgApiCardsNestedI\
            nput"
    TcgApiCardUncheckedUpdateWithoutCollectionCardInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        setTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatesubtypesInput"
            - type: array
              items: {}
        hp:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        number:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        artist:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rarity:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        flavorText:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        setId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    TcgApiCardCreateWithoutSetInput:
      type: object
      properties:
        id:
          type: string
        cardTcgId:
          type: string
        setTcgId:
          type: string
        name:
          type: string
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatesubtypesInput"
            - type: array
              items: {}
        hp:
          type: string
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          type: string
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          type: integer
        number:
          type: string
        artist:
          type: string
        rarity:
          type: string
        flavorText:
          type: string
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        collectionCard:
          $ref: "#/components/schemas/CollectionCardCreateNestedManyWithoutTcgApiCardInpu\
            t"
      required:
        - cardTcgId
        - setTcgId
        - name
        - supertype
        - hp
        - evolvesFrom
        - ancientTrait
        - convertedRetreatCost
        - number
        - artist
        - rarity
        - flavorText
        - images
    TcgApiCardUncheckedCreateWithoutSetInput:
      type: object
      properties:
        id:
          type: string
        cardTcgId:
          type: string
        setTcgId:
          type: string
        name:
          type: string
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatesubtypesInput"
            - type: array
              items: {}
        hp:
          type: string
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          type: string
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          type: integer
        number:
          type: string
        artist:
          type: string
        rarity:
          type: string
        flavorText:
          type: string
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        collectionCard:
          $ref: "#/components/schemas/CollectionCardUncheckedCreateNestedManyWithoutTcgAp\
            iCardInput"
      required:
        - cardTcgId
        - setTcgId
        - name
        - supertype
        - hp
        - evolvesFrom
        - ancientTrait
        - convertedRetreatCost
        - number
        - artist
        - rarity
        - flavorText
        - images
    TcgApiCardCreateOrConnectWithoutSetInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateWithoutSetInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedCreateWithoutSetInput"
      required:
        - where
        - create
    TcgApiCardCreateManySetInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateManySetInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardCreateManySetInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TcgApiCardUpsertWithWhereUniqueWithoutSetInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateWithoutSetInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedUpdateWithoutSetInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateWithoutSetInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedCreateWithoutSetInput"
      required:
        - where
        - update
        - create
    TcgApiCardUpdateWithWhereUniqueWithoutSetInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateWithoutSetInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedUpdateWithoutSetInput"
      required:
        - where
        - data
    TcgApiCardUpdateManyWithWhereWithoutSetInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiCardScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateManyMutationInput"
            - $ref: "#/components/schemas/TcgApiCardUncheckedUpdateManyWithoutSetInput"
      required:
        - where
        - data
    TcgApiCardScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TcgApiCardScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TcgApiCardScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        cardTcgId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        setTcgId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        supertype:
          $ref: "#/components/schemas/JsonFilter"
        subtypes:
          $ref: "#/components/schemas/JsonNullableListFilter"
        hp:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        types:
          $ref: "#/components/schemas/JsonNullableListFilter"
        evolvesFrom:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        evolvesTo:
          $ref: "#/components/schemas/JsonNullableListFilter"
        rules:
          $ref: "#/components/schemas/JsonNullableListFilter"
        ancientTrait:
          $ref: "#/components/schemas/JsonFilter"
        abilities:
          $ref: "#/components/schemas/JsonNullableListFilter"
        attacks:
          $ref: "#/components/schemas/JsonNullableListFilter"
        weaknesses:
          $ref: "#/components/schemas/JsonNullableListFilter"
        resistances:
          $ref: "#/components/schemas/JsonNullableListFilter"
        retreatCost:
          $ref: "#/components/schemas/StringNullableListFilter"
        convertedRetreatCost:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        number:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        artist:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        rarity:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        flavorText:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        nationalPokedexNumbers:
          $ref: "#/components/schemas/IntNullableListFilter"
        legalities:
          $ref: "#/components/schemas/JsonNullableFilter"
        images:
          $ref: "#/components/schemas/JsonFilter"
        setLib:
          $ref: "#/components/schemas/JsonNullableFilter"
        setId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
    TcgApiSetCreateWithoutTcgApiCardsInput:
      type: object
      properties:
        id:
          type: string
        tcgSetId:
          type: string
        name:
          type: string
        series:
          type: string
        printedTotal:
          type: integer
        total:
          type: integer
        legalities:
          type: string
        ptcgoCode:
          type: string
        releaseDate:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        images:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        requiresCardUpdate:
          type: boolean
      required:
        - tcgSetId
        - name
        - series
        - printedTotal
        - total
        - releaseDate
        - updatedAt
    TcgApiSetUncheckedCreateWithoutTcgApiCardsInput:
      type: object
      properties:
        id:
          type: string
        tcgSetId:
          type: string
        name:
          type: string
        series:
          type: string
        printedTotal:
          type: integer
        total:
          type: integer
        legalities:
          type: string
        ptcgoCode:
          type: string
        releaseDate:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        images:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        requiresCardUpdate:
          type: boolean
      required:
        - tcgSetId
        - name
        - series
        - printedTotal
        - total
        - releaseDate
        - updatedAt
    TcgApiSetCreateOrConnectWithoutTcgApiCardsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiSetWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetCreateWithoutTcgApiCardsInput"
            - $ref: "#/components/schemas/TcgApiSetUncheckedCreateWithoutTcgApiCardsInput"
      required:
        - where
        - create
    CollectionCardCreateWithoutTcgApiCardInput:
      type: object
      properties:
        id:
          type: string
        index:
          type: integer
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
        collection:
          $ref: "#/components/schemas/CollectionCreateNestedOneWithoutCollectionCardsInpu\
            t"
      required:
        - index
        - owned
        - ownedVariation
        - awaitingOwnership
        - awaitingOwnershipVariation
        - collection
    CollectionCardUncheckedCreateWithoutTcgApiCardInput:
      type: object
      properties:
        id:
          type: string
        collectionId:
          type: string
        index:
          type: integer
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
      required:
        - collectionId
        - index
        - owned
        - ownedVariation
        - awaitingOwnership
        - awaitingOwnershipVariation
    CollectionCardCreateOrConnectWithoutTcgApiCardInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateWithoutTcgApiCardInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutTcgApiCardInput"
      required:
        - where
        - create
    CollectionCardCreateManyTcgApiCardInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateManyTcgApiCardInput"
            - type: array
              items:
                $ref: "#/components/schemas/CollectionCardCreateManyTcgApiCardInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TcgApiSetUpsertWithoutTcgApiCardsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetUpdateWithoutTcgApiCardsInput"
            - $ref: "#/components/schemas/TcgApiSetUncheckedUpdateWithoutTcgApiCardsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetCreateWithoutTcgApiCardsInput"
            - $ref: "#/components/schemas/TcgApiSetUncheckedCreateWithoutTcgApiCardsInput"
        where:
          $ref: "#/components/schemas/TcgApiSetWhereInput"
      required:
        - update
        - create
    TcgApiSetUpdateToOneWithWhereWithoutTcgApiCardsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiSetWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TcgApiSetUpdateWithoutTcgApiCardsInput"
            - $ref: "#/components/schemas/TcgApiSetUncheckedUpdateWithoutTcgApiCardsInput"
      required:
        - data
    TcgApiSetUpdateWithoutTcgApiCardsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tcgSetId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        series:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        printedTotal:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        total:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        legalities:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        ptcgoCode:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        releaseDate:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        images:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        requiresCardUpdate:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    TcgApiSetUncheckedUpdateWithoutTcgApiCardsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tcgSetId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        series:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        printedTotal:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        total:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        legalities:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        ptcgoCode:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        releaseDate:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        images:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        requiresCardUpdate:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    CollectionCardUpsertWithWhereUniqueWithoutTcgApiCardInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateWithoutTcgApiCardInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedUpdateWithoutTcgApiCardInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardCreateWithoutTcgApiCardInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedCreateWithoutTcgApiCardInput"
      required:
        - where
        - update
        - create
    CollectionCardUpdateWithWhereUniqueWithoutTcgApiCardInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateWithoutTcgApiCardInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedUpdateWithoutTcgApiCardInput"
      required:
        - where
        - data
    CollectionCardUpdateManyWithWhereWithoutTcgApiCardInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionCardScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/CollectionCardUpdateManyMutationInput"
            - $ref: "#/components/schemas/CollectionCardUncheckedUpdateManyWithoutTcgApiCardI\
                nput"
      required:
        - where
        - data
    AccountCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
      required:
        - type
        - provider
        - providerAccountId
    SessionCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - expires
    SpaceUserCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        spaceId:
          type: string
        role:
          $ref: "#/components/schemas/SpaceUserRole"
      required:
        - spaceId
        - role
    TodoCreateManyOwnerInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        listId:
          type: string
        title:
          type: string
        completedAt:
          type: string
          format: date-time
      required:
        - listId
        - title
    ListCreateManyOwnerInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        spaceId:
          type: string
        title:
          type: string
        private:
          type: boolean
      required:
        - spaceId
        - title
    CollectionCreateManyOwnerInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        tcgApiFilter:
          type: string
        collecting_variations:
          type: boolean
        cardSort:
          type: string
        cardApiOrderBy:
          type: string
      required:
        - name
        - tcgApiFilter
        - collecting_variations
        - cardSort
        - cardApiOrderBy
    AccountUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
    AccountUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
    AccountUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
    SessionUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    SessionUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    SessionUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    SpaceUserUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserRole"
            - $ref: "#/components/schemas/EnumSpaceUserRoleFieldUpdateOperationsInput"
        space:
          $ref: "#/components/schemas/SpaceUpdateOneRequiredWithoutMembersNestedInput"
    SpaceUserUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        spaceId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserRole"
            - $ref: "#/components/schemas/EnumSpaceUserRoleFieldUpdateOperationsInput"
    SpaceUserUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        spaceId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserRole"
            - $ref: "#/components/schemas/EnumSpaceUserRoleFieldUpdateOperationsInput"
    TodoUpdateWithoutOwnerInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        list:
          $ref: "#/components/schemas/ListUpdateOneRequiredWithoutTodosNestedInput"
    TodoUncheckedUpdateWithoutOwnerInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        listId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
    TodoUncheckedUpdateManyWithoutOwnerInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        listId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
    ListUpdateWithoutOwnerInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        private:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        space:
          $ref: "#/components/schemas/SpaceUpdateOneRequiredWithoutListsNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUpdateManyWithoutListNestedInput"
    ListUncheckedUpdateWithoutOwnerInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        spaceId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        private:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        todos:
          $ref: "#/components/schemas/TodoUncheckedUpdateManyWithoutListNestedInput"
    ListUncheckedUpdateManyWithoutOwnerInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        spaceId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        private:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    CollectionUpdateWithoutOwnerInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tcgApiFilter:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        collecting_variations:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        cardSort:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardApiOrderBy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        collectionCards:
          $ref: "#/components/schemas/CollectionCardUpdateManyWithoutCollectionNestedInpu\
            t"
    CollectionUncheckedUpdateWithoutOwnerInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tcgApiFilter:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        collecting_variations:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        cardSort:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardApiOrderBy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        collectionCards:
          $ref: "#/components/schemas/CollectionCardUncheckedUpdateManyWithoutCollectionN\
            estedInput"
    CollectionUncheckedUpdateManyWithoutOwnerInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tcgApiFilter:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        collecting_variations:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        cardSort:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardApiOrderBy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    SpaceUserCreateManySpaceInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        userId:
          type: string
        role:
          $ref: "#/components/schemas/SpaceUserRole"
      required:
        - userId
        - role
    ListCreateManySpaceInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        ownerId:
          type: string
        title:
          type: string
        private:
          type: boolean
      required:
        - ownerId
        - title
    SpaceUserUpdateWithoutSpaceInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserRole"
            - $ref: "#/components/schemas/EnumSpaceUserRoleFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutSpacesNestedInput"
    SpaceUserUncheckedUpdateWithoutSpaceInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        userId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserRole"
            - $ref: "#/components/schemas/EnumSpaceUserRoleFieldUpdateOperationsInput"
    SpaceUserUncheckedUpdateManyWithoutSpaceInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        userId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/SpaceUserRole"
            - $ref: "#/components/schemas/EnumSpaceUserRoleFieldUpdateOperationsInput"
    ListUpdateWithoutSpaceInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        private:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        owner:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutListsNestedInput"
        todos:
          $ref: "#/components/schemas/TodoUpdateManyWithoutListNestedInput"
    ListUncheckedUpdateWithoutSpaceInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        ownerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        private:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        todos:
          $ref: "#/components/schemas/TodoUncheckedUpdateManyWithoutListNestedInput"
    ListUncheckedUpdateManyWithoutSpaceInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        ownerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        private:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    TodoCreateManyListInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        ownerId:
          type: string
        title:
          type: string
        completedAt:
          type: string
          format: date-time
      required:
        - ownerId
        - title
    TodoUpdateWithoutListInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
        owner:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutTodosNestedInput"
    TodoUncheckedUpdateWithoutListInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        ownerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
    TodoUncheckedUpdateManyWithoutListInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        ownerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        title:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        completedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
    CollectionCardCreateManyCollectionInput:
      type: object
      properties:
        id:
          type: string
        tcgApiCardId:
          type: string
        index:
          type: integer
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
      required:
        - tcgApiCardId
        - index
        - owned
        - ownedVariation
        - awaitingOwnership
        - awaitingOwnershipVariation
    CollectionCardUpdateWithoutCollectionInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        index:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        owned:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        ownedVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnership:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnershipVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        tcgApiCard:
          $ref: "#/components/schemas/TcgApiCardUpdateOneRequiredWithoutCollectionCardNes\
            tedInput"
    CollectionCardUncheckedUpdateWithoutCollectionInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tcgApiCardId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        index:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        owned:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        ownedVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnership:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnershipVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    CollectionCardUncheckedUpdateManyWithoutCollectionInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        tcgApiCardId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        index:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        owned:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        ownedVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnership:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnershipVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    TcgApiCardCreateManySetInput:
      type: object
      properties:
        id:
          type: string
        cardTcgId:
          type: string
        setTcgId:
          type: string
        name:
          type: string
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatesubtypesInput"
            - type: array
              items: {}
        hp:
          type: string
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          type: string
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          type: integer
        number:
          type: string
        artist:
          type: string
        rarity:
          type: string
        flavorText:
          type: string
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardCreatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
      required:
        - cardTcgId
        - setTcgId
        - name
        - supertype
        - hp
        - evolvesFrom
        - ancientTrait
        - convertedRetreatCost
        - number
        - artist
        - rarity
        - flavorText
        - images
    TcgApiCardUpdateWithoutSetInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        setTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatesubtypesInput"
            - type: array
              items: {}
        hp:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        number:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        artist:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rarity:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        flavorText:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        collectionCard:
          $ref: "#/components/schemas/CollectionCardUpdateManyWithoutTcgApiCardNestedInpu\
            t"
    TcgApiCardUncheckedUpdateWithoutSetInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        setTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatesubtypesInput"
            - type: array
              items: {}
        hp:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        number:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        artist:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rarity:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        flavorText:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        collectionCard:
          $ref: "#/components/schemas/CollectionCardUncheckedUpdateManyWithoutTcgApiCardN\
            estedInput"
    TcgApiCardUncheckedUpdateManyWithoutSetInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        cardTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        setTcgId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        supertype:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        subtypes:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatesubtypesInput"
            - type: array
              items: {}
        hp:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        types:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatetypesInput"
            - type: array
              items: {}
        evolvesFrom:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        evolvesTo:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateevolvesToInput"
            - type: array
              items: {}
        rules:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdaterulesInput"
            - type: array
              items: {}
        ancientTrait:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        abilities:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateabilitiesInput"
            - type: array
              items: {}
        attacks:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateattacksInput"
            - type: array
              items: {}
        weaknesses:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateweaknessesInput"
            - type: array
              items: {}
        resistances:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateresistancesInput"
            - type: array
              items: {}
        retreatCost:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdateretreatCostInput"
            - type: array
              items:
                type: string
        convertedRetreatCost:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        number:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        artist:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        rarity:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        flavorText:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        nationalPokedexNumbers:
          oneOf:
            - $ref: "#/components/schemas/TcgApiCardUpdatenationalPokedexNumbersInput"
            - type: array
              items:
                type: integer
        legalities:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        images:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        setLib:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
    CollectionCardCreateManyTcgApiCardInput:
      type: object
      properties:
        id:
          type: string
        collectionId:
          type: string
        index:
          type: integer
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
      required:
        - collectionId
        - index
        - owned
        - ownedVariation
        - awaitingOwnership
        - awaitingOwnershipVariation
    CollectionCardUpdateWithoutTcgApiCardInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        index:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        owned:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        ownedVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnership:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnershipVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        collection:
          $ref: "#/components/schemas/CollectionUpdateOneRequiredWithoutCollectionCardsNe\
            stedInput"
    CollectionCardUncheckedUpdateWithoutTcgApiCardInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        collectionId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        index:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        owned:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        ownedVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnership:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnershipVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    CollectionCardUncheckedUpdateManyWithoutTcgApiCardInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        collectionId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        index:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        owned:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        ownedVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnership:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        awaitingOwnershipVariation:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    UserArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
    SpaceArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SpaceSelect"
        include:
          $ref: "#/components/schemas/SpaceInclude"
    ListArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ListSelect"
        include:
          $ref: "#/components/schemas/ListInclude"
    CollectionArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/CollectionSelect"
        include:
          $ref: "#/components/schemas/CollectionInclude"
    TcgApiSetArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TcgApiSetSelect"
        include:
          $ref: "#/components/schemas/TcgApiSetInclude"
    TcgApiCardArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TcgApiCardSelect"
        include:
          $ref: "#/components/schemas/TcgApiCardInclude"
    AccountInclude:
      type: object
      properties:
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    SessionInclude:
      type: object
      properties:
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    UserInclude:
      type: object
      properties:
        accounts:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountFindManyArgs"
        sessions:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionFindManyArgs"
        spaces:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceUserFindManyArgs"
        todos:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodoFindManyArgs"
        lists:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListFindManyArgs"
        collection:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeArgs"
    SpaceInclude:
      type: object
      properties:
        members:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceUserFindManyArgs"
        lists:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceCountOutputTypeArgs"
    SpaceUserInclude:
      type: object
      properties:
        space:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceArgs"
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    ListInclude:
      type: object
      properties:
        space:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceArgs"
        owner:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        todos:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodoFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListCountOutputTypeArgs"
    TodoInclude:
      type: object
      properties:
        owner:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        list:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListArgs"
    CollectionInclude:
      type: object
      properties:
        collectionCards:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionCardFindManyArgs"
        owner:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionCountOutputTypeArgs"
    CollectionCardInclude:
      type: object
      properties:
        collection:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionArgs"
        tcgApiCard:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiCardArgs"
    TcgApiSetInclude:
      type: object
      properties:
        tcgApiCards:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiCardFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiSetCountOutputTypeArgs"
    TcgApiCardInclude:
      type: object
      properties:
        set:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiSetArgs"
        collectionCard:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionCardFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiCardCountOutputTypeArgs"
    UserCountOutputTypeSelect:
      type: object
      properties:
        accounts:
          type: boolean
        sessions:
          type: boolean
        spaces:
          type: boolean
        todos:
          type: boolean
        lists:
          type: boolean
        collection:
          type: boolean
    SpaceCountOutputTypeSelect:
      type: object
      properties:
        members:
          type: boolean
        lists:
          type: boolean
    ListCountOutputTypeSelect:
      type: object
      properties:
        todos:
          type: boolean
    CollectionCountOutputTypeSelect:
      type: object
      properties:
        collectionCards:
          type: boolean
    TcgApiSetCountOutputTypeSelect:
      type: object
      properties:
        tcgApiCards:
          type: boolean
    TcgApiCardCountOutputTypeSelect:
      type: object
      properties:
        collectionCard:
          type: boolean
    UserCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserCountOutputTypeSelect"
    SpaceCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SpaceCountOutputTypeSelect"
    ListCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ListCountOutputTypeSelect"
    CollectionCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/CollectionCountOutputTypeSelect"
    TcgApiSetCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TcgApiSetCountOutputTypeSelect"
    TcgApiCardCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TcgApiCardCountOutputTypeSelect"
    AccountSelect:
      type: object
      properties:
        id:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    SessionSelect:
      type: object
      properties:
        id:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    UserSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        password:
          type: boolean
        emailVerified:
          type: boolean
        image:
          type: boolean
        accounts:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountFindManyArgs"
        sessions:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionFindManyArgs"
        spaces:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceUserFindManyArgs"
        todos:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodoFindManyArgs"
        lists:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListFindManyArgs"
        collection:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeArgs"
    VerificationTokenSelect:
      type: object
      properties:
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
    SpaceSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        name:
          type: boolean
        slug:
          type: boolean
        members:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceUserFindManyArgs"
        lists:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceCountOutputTypeArgs"
    SpaceUserSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        space:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceArgs"
        spaceId:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        userId:
          type: boolean
        role:
          type: boolean
    ListSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        space:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceArgs"
        spaceId:
          type: boolean
        owner:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        ownerId:
          type: boolean
        title:
          type: boolean
        private:
          type: boolean
        todos:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodoFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListCountOutputTypeArgs"
    TodoSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        owner:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        ownerId:
          type: boolean
        list:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListArgs"
        listId:
          type: boolean
        title:
          type: boolean
        completedAt:
          type: boolean
    CollectionSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        ownerId:
          type: boolean
        tcgApiFilter:
          type: boolean
        collecting_variations:
          type: boolean
        cardSort:
          type: boolean
        cardApiOrderBy:
          type: boolean
        collectionCards:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionCardFindManyArgs"
        owner:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionCountOutputTypeArgs"
    CollectionCardSelect:
      type: object
      properties:
        id:
          type: boolean
        collectionId:
          type: boolean
        tcgApiCardId:
          type: boolean
        index:
          type: boolean
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
        collection:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionArgs"
        tcgApiCard:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiCardArgs"
    TcgApiSetSelect:
      type: object
      properties:
        id:
          type: boolean
        tcgSetId:
          type: boolean
        name:
          type: boolean
        series:
          type: boolean
        printedTotal:
          type: boolean
        total:
          type: boolean
        legalities:
          type: boolean
        ptcgoCode:
          type: boolean
        releaseDate:
          type: boolean
        updatedAt:
          type: boolean
        images:
          type: boolean
        requiresCardUpdate:
          type: boolean
        tcgApiCards:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiCardFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiSetCountOutputTypeArgs"
    TcgApiCardSelect:
      type: object
      properties:
        id:
          type: boolean
        cardTcgId:
          type: boolean
        setTcgId:
          type: boolean
        name:
          type: boolean
        supertype:
          type: boolean
        subtypes:
          type: boolean
        hp:
          type: boolean
        types:
          type: boolean
        evolvesFrom:
          type: boolean
        evolvesTo:
          type: boolean
        rules:
          type: boolean
        ancientTrait:
          type: boolean
        abilities:
          type: boolean
        attacks:
          type: boolean
        weaknesses:
          type: boolean
        resistances:
          type: boolean
        retreatCost:
          type: boolean
        convertedRetreatCost:
          type: boolean
        number:
          type: boolean
        artist:
          type: boolean
        rarity:
          type: boolean
        flavorText:
          type: boolean
        nationalPokedexNumbers:
          type: boolean
        legalities:
          type: boolean
        images:
          type: boolean
        setLib:
          type: boolean
        setId:
          type: boolean
        set:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiSetArgs"
        collectionCard:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionCardFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiCardCountOutputTypeArgs"
    AccountCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
        _all:
          type: boolean
    AccountAvgAggregateInput:
      type: object
      properties:
        expires_at:
          type: boolean
    AccountSumAggregateInput:
      type: object
      properties:
        expires_at:
          type: boolean
    AccountMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
    AccountMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
    SessionCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
        _all:
          type: boolean
    SessionMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
    SessionMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
    UserCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        password:
          type: boolean
        emailVerified:
          type: boolean
        image:
          type: boolean
        _all:
          type: boolean
    UserMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        password:
          type: boolean
        emailVerified:
          type: boolean
        image:
          type: boolean
    UserMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        password:
          type: boolean
        emailVerified:
          type: boolean
        image:
          type: boolean
    VerificationTokenCountAggregateInput:
      type: object
      properties:
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
        _all:
          type: boolean
    VerificationTokenMinAggregateInput:
      type: object
      properties:
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
    VerificationTokenMaxAggregateInput:
      type: object
      properties:
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
    SpaceCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        name:
          type: boolean
        slug:
          type: boolean
        _all:
          type: boolean
    SpaceMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        name:
          type: boolean
        slug:
          type: boolean
    SpaceMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        name:
          type: boolean
        slug:
          type: boolean
    SpaceUserCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        spaceId:
          type: boolean
        userId:
          type: boolean
        role:
          type: boolean
        _all:
          type: boolean
    SpaceUserMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        spaceId:
          type: boolean
        userId:
          type: boolean
        role:
          type: boolean
    SpaceUserMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        spaceId:
          type: boolean
        userId:
          type: boolean
        role:
          type: boolean
    ListCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        spaceId:
          type: boolean
        ownerId:
          type: boolean
        title:
          type: boolean
        private:
          type: boolean
        _all:
          type: boolean
    ListMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        spaceId:
          type: boolean
        ownerId:
          type: boolean
        title:
          type: boolean
        private:
          type: boolean
    ListMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        spaceId:
          type: boolean
        ownerId:
          type: boolean
        title:
          type: boolean
        private:
          type: boolean
    TodoCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        ownerId:
          type: boolean
        listId:
          type: boolean
        title:
          type: boolean
        completedAt:
          type: boolean
        _all:
          type: boolean
    TodoMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        ownerId:
          type: boolean
        listId:
          type: boolean
        title:
          type: boolean
        completedAt:
          type: boolean
    TodoMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        ownerId:
          type: boolean
        listId:
          type: boolean
        title:
          type: boolean
        completedAt:
          type: boolean
    CollectionCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        ownerId:
          type: boolean
        tcgApiFilter:
          type: boolean
        collecting_variations:
          type: boolean
        cardSort:
          type: boolean
        cardApiOrderBy:
          type: boolean
        _all:
          type: boolean
    CollectionMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        ownerId:
          type: boolean
        tcgApiFilter:
          type: boolean
        collecting_variations:
          type: boolean
        cardSort:
          type: boolean
        cardApiOrderBy:
          type: boolean
    CollectionMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        ownerId:
          type: boolean
        tcgApiFilter:
          type: boolean
        collecting_variations:
          type: boolean
        cardSort:
          type: boolean
        cardApiOrderBy:
          type: boolean
    CollectionCardCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        collectionId:
          type: boolean
        tcgApiCardId:
          type: boolean
        index:
          type: boolean
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
        _all:
          type: boolean
    CollectionCardAvgAggregateInput:
      type: object
      properties:
        index:
          type: boolean
    CollectionCardSumAggregateInput:
      type: object
      properties:
        index:
          type: boolean
    CollectionCardMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        collectionId:
          type: boolean
        tcgApiCardId:
          type: boolean
        index:
          type: boolean
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
    CollectionCardMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        collectionId:
          type: boolean
        tcgApiCardId:
          type: boolean
        index:
          type: boolean
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
    TcgApiSetCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        tcgSetId:
          type: boolean
        name:
          type: boolean
        series:
          type: boolean
        printedTotal:
          type: boolean
        total:
          type: boolean
        legalities:
          type: boolean
        ptcgoCode:
          type: boolean
        releaseDate:
          type: boolean
        updatedAt:
          type: boolean
        images:
          type: boolean
        requiresCardUpdate:
          type: boolean
        _all:
          type: boolean
    TcgApiSetAvgAggregateInput:
      type: object
      properties:
        printedTotal:
          type: boolean
        total:
          type: boolean
    TcgApiSetSumAggregateInput:
      type: object
      properties:
        printedTotal:
          type: boolean
        total:
          type: boolean
    TcgApiSetMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        tcgSetId:
          type: boolean
        name:
          type: boolean
        series:
          type: boolean
        printedTotal:
          type: boolean
        total:
          type: boolean
        legalities:
          type: boolean
        ptcgoCode:
          type: boolean
        releaseDate:
          type: boolean
        updatedAt:
          type: boolean
        requiresCardUpdate:
          type: boolean
    TcgApiSetMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        tcgSetId:
          type: boolean
        name:
          type: boolean
        series:
          type: boolean
        printedTotal:
          type: boolean
        total:
          type: boolean
        legalities:
          type: boolean
        ptcgoCode:
          type: boolean
        releaseDate:
          type: boolean
        updatedAt:
          type: boolean
        requiresCardUpdate:
          type: boolean
    TcgApiCardCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        cardTcgId:
          type: boolean
        setTcgId:
          type: boolean
        name:
          type: boolean
        supertype:
          type: boolean
        subtypes:
          type: boolean
        hp:
          type: boolean
        types:
          type: boolean
        evolvesFrom:
          type: boolean
        evolvesTo:
          type: boolean
        rules:
          type: boolean
        ancientTrait:
          type: boolean
        abilities:
          type: boolean
        attacks:
          type: boolean
        weaknesses:
          type: boolean
        resistances:
          type: boolean
        retreatCost:
          type: boolean
        convertedRetreatCost:
          type: boolean
        number:
          type: boolean
        artist:
          type: boolean
        rarity:
          type: boolean
        flavorText:
          type: boolean
        nationalPokedexNumbers:
          type: boolean
        legalities:
          type: boolean
        images:
          type: boolean
        setLib:
          type: boolean
        setId:
          type: boolean
        _all:
          type: boolean
    TcgApiCardAvgAggregateInput:
      type: object
      properties:
        convertedRetreatCost:
          type: boolean
        nationalPokedexNumbers:
          type: boolean
    TcgApiCardSumAggregateInput:
      type: object
      properties:
        convertedRetreatCost:
          type: boolean
        nationalPokedexNumbers:
          type: boolean
    TcgApiCardMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        cardTcgId:
          type: boolean
        setTcgId:
          type: boolean
        name:
          type: boolean
        hp:
          type: boolean
        evolvesFrom:
          type: boolean
        convertedRetreatCost:
          type: boolean
        number:
          type: boolean
        artist:
          type: boolean
        rarity:
          type: boolean
        flavorText:
          type: boolean
        setId:
          type: boolean
    TcgApiCardMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        cardTcgId:
          type: boolean
        setTcgId:
          type: boolean
        name:
          type: boolean
        hp:
          type: boolean
        evolvesFrom:
          type: boolean
        convertedRetreatCost:
          type: boolean
        number:
          type: boolean
        artist:
          type: boolean
        rarity:
          type: boolean
        flavorText:
          type: boolean
        setId:
          type: boolean
    AggregateAccount:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/AccountCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/AccountAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/AccountSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/AccountMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/AccountMaxAggregateOutputType"
    AccountGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
        _count:
          $ref: "#/components/schemas/AccountCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/AccountAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/AccountSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/AccountMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/AccountMaxAggregateOutputType"
      required:
        - id
        - userId
        - type
        - provider
        - providerAccountId
    AggregateSession:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SessionCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/SessionMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/SessionMaxAggregateOutputType"
    SessionGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
        _count:
          $ref: "#/components/schemas/SessionCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/SessionMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/SessionMaxAggregateOutputType"
      required:
        - id
        - sessionToken
        - userId
        - expires
    AggregateUser:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateOutputType"
    UserGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
        _count:
          $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateOutputType"
      required:
        - id
        - password
    AggregateVerificationToken:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/VerificationTokenCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/VerificationTokenMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/VerificationTokenMaxAggregateOutputType"
    VerificationTokenGroupByOutputType:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
        _count:
          $ref: "#/components/schemas/VerificationTokenCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/VerificationTokenMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/VerificationTokenMaxAggregateOutputType"
      required:
        - identifier
        - token
        - expires
    AggregateSpace:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SpaceCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/SpaceMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/SpaceMaxAggregateOutputType"
    SpaceGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        slug:
          type: string
        _count:
          $ref: "#/components/schemas/SpaceCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/SpaceMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/SpaceMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - slug
    AggregateSpaceUser:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SpaceUserCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/SpaceUserMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/SpaceUserMaxAggregateOutputType"
    SpaceUserGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        spaceId:
          type: string
        userId:
          type: string
        role:
          $ref: "#/components/schemas/SpaceUserRole"
        _count:
          $ref: "#/components/schemas/SpaceUserCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/SpaceUserMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/SpaceUserMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - updatedAt
        - spaceId
        - userId
        - role
    AggregateList:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/ListCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/ListMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/ListMaxAggregateOutputType"
    ListGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        spaceId:
          type: string
        ownerId:
          type: string
        title:
          type: string
        private:
          type: boolean
        _count:
          $ref: "#/components/schemas/ListCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/ListMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/ListMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - updatedAt
        - spaceId
        - ownerId
        - title
        - private
    AggregateTodo:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/TodoCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/TodoMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/TodoMaxAggregateOutputType"
    TodoGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        ownerId:
          type: string
        listId:
          type: string
        title:
          type: string
        completedAt:
          type: string
          format: date-time
        _count:
          $ref: "#/components/schemas/TodoCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/TodoMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/TodoMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - updatedAt
        - ownerId
        - listId
        - title
    AggregateCollection:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/CollectionCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/CollectionMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/CollectionMaxAggregateOutputType"
    CollectionGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ownerId:
          type: string
        tcgApiFilter:
          type: string
        collecting_variations:
          type: boolean
        cardSort:
          type: string
        cardApiOrderBy:
          type: string
        _count:
          $ref: "#/components/schemas/CollectionCountAggregateOutputType"
        _min:
          $ref: "#/components/schemas/CollectionMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/CollectionMaxAggregateOutputType"
      required:
        - id
        - name
        - ownerId
        - tcgApiFilter
        - collecting_variations
        - cardSort
        - cardApiOrderBy
    AggregateCollectionCard:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/CollectionCardCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/CollectionCardAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/CollectionCardSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/CollectionCardMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/CollectionCardMaxAggregateOutputType"
    CollectionCardGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        collectionId:
          type: string
        tcgApiCardId:
          type: string
        index:
          type: integer
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
        _count:
          $ref: "#/components/schemas/CollectionCardCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/CollectionCardAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/CollectionCardSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/CollectionCardMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/CollectionCardMaxAggregateOutputType"
      required:
        - id
        - collectionId
        - tcgApiCardId
        - index
        - owned
        - ownedVariation
        - awaitingOwnership
        - awaitingOwnershipVariation
    AggregateTcgApiSet:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/TcgApiSetCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/TcgApiSetAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/TcgApiSetSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/TcgApiSetMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/TcgApiSetMaxAggregateOutputType"
    TcgApiSetGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        tcgSetId:
          type: string
        name:
          type: string
        series:
          type: string
        printedTotal:
          type: integer
        total:
          type: integer
        legalities:
          type: string
        ptcgoCode:
          type: string
        releaseDate:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        images: {}
        requiresCardUpdate:
          type: boolean
        _count:
          $ref: "#/components/schemas/TcgApiSetCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/TcgApiSetAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/TcgApiSetSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/TcgApiSetMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/TcgApiSetMaxAggregateOutputType"
      required:
        - id
        - tcgSetId
        - name
        - series
        - printedTotal
        - total
        - releaseDate
        - updatedAt
        - requiresCardUpdate
    AggregateTcgApiCard:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/TcgApiCardCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/TcgApiCardAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/TcgApiCardSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/TcgApiCardMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/TcgApiCardMaxAggregateOutputType"
    TcgApiCardGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        cardTcgId:
          type: string
        setTcgId:
          type: string
        name:
          type: string
        supertype: {}
        subtypes:
          type: array
          items: {}
        hp:
          type: string
        types:
          type: array
          items: {}
        evolvesFrom:
          type: string
        evolvesTo:
          type: array
          items: {}
        rules:
          type: array
          items: {}
        ancientTrait: {}
        abilities:
          type: array
          items: {}
        attacks:
          type: array
          items: {}
        weaknesses:
          type: array
          items: {}
        resistances:
          type: array
          items: {}
        retreatCost:
          type: array
          items:
            type: string
        convertedRetreatCost:
          type: integer
        number:
          type: string
        artist:
          type: string
        rarity:
          type: string
        flavorText:
          type: string
        nationalPokedexNumbers:
          type: array
          items:
            type: integer
        legalities: {}
        images: {}
        setLib: {}
        setId:
          type: string
        _count:
          $ref: "#/components/schemas/TcgApiCardCountAggregateOutputType"
        _avg:
          $ref: "#/components/schemas/TcgApiCardAvgAggregateOutputType"
        _sum:
          $ref: "#/components/schemas/TcgApiCardSumAggregateOutputType"
        _min:
          $ref: "#/components/schemas/TcgApiCardMinAggregateOutputType"
        _max:
          $ref: "#/components/schemas/TcgApiCardMaxAggregateOutputType"
      required:
        - id
        - cardTcgId
        - setTcgId
        - name
        - supertype
        - hp
        - evolvesFrom
        - ancientTrait
        - convertedRetreatCost
        - number
        - artist
        - rarity
        - flavorText
        - images
        - setId
    AccountCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        type:
          type: integer
        provider:
          type: integer
        providerAccountId:
          type: integer
        refresh_token:
          type: integer
        access_token:
          type: integer
        expires_at:
          type: integer
        token_type:
          type: integer
        scope:
          type: integer
        id_token:
          type: integer
        session_state:
          type: integer
        _all:
          type: integer
      required:
        - id
        - userId
        - type
        - provider
        - providerAccountId
        - refresh_token
        - access_token
        - expires_at
        - token_type
        - scope
        - id_token
        - session_state
        - _all
    AccountAvgAggregateOutputType:
      type: object
      properties:
        expires_at:
          type: number
    AccountSumAggregateOutputType:
      type: object
      properties:
        expires_at:
          type: integer
    AccountMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
    AccountMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          type: string
        access_token:
          type: string
        expires_at:
          type: integer
        token_type:
          type: string
        scope:
          type: string
        id_token:
          type: string
        session_state:
          type: string
    SessionCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        sessionToken:
          type: integer
        userId:
          type: integer
        expires:
          type: integer
        _all:
          type: integer
      required:
        - id
        - sessionToken
        - userId
        - expires
        - _all
    SessionMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
    SessionMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
    UserCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        email:
          type: integer
        password:
          type: integer
        emailVerified:
          type: integer
        image:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - email
        - password
        - emailVerified
        - image
        - _all
    UserMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
    UserMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        emailVerified:
          type: string
          format: date-time
        image:
          type: string
    VerificationTokenCountAggregateOutputType:
      type: object
      properties:
        identifier:
          type: integer
        token:
          type: integer
        expires:
          type: integer
        _all:
          type: integer
      required:
        - identifier
        - token
        - expires
        - _all
    VerificationTokenMinAggregateOutputType:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
    VerificationTokenMaxAggregateOutputType:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
    SpaceCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        name:
          type: integer
        slug:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - slug
        - _all
    SpaceMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        slug:
          type: string
    SpaceMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        slug:
          type: string
    SpaceUserCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        spaceId:
          type: integer
        userId:
          type: integer
        role:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - spaceId
        - userId
        - role
        - _all
    SpaceUserMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        spaceId:
          type: string
        userId:
          type: string
        role:
          $ref: "#/components/schemas/SpaceUserRole"
    SpaceUserMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        spaceId:
          type: string
        userId:
          type: string
        role:
          $ref: "#/components/schemas/SpaceUserRole"
    ListCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        spaceId:
          type: integer
        ownerId:
          type: integer
        title:
          type: integer
        private:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - spaceId
        - ownerId
        - title
        - private
        - _all
    ListMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        spaceId:
          type: string
        ownerId:
          type: string
        title:
          type: string
        private:
          type: boolean
    ListMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        spaceId:
          type: string
        ownerId:
          type: string
        title:
          type: string
        private:
          type: boolean
    TodoCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        ownerId:
          type: integer
        listId:
          type: integer
        title:
          type: integer
        completedAt:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - ownerId
        - listId
        - title
        - completedAt
        - _all
    TodoMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        ownerId:
          type: string
        listId:
          type: string
        title:
          type: string
        completedAt:
          type: string
          format: date-time
    TodoMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        ownerId:
          type: string
        listId:
          type: string
        title:
          type: string
        completedAt:
          type: string
          format: date-time
    CollectionCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        ownerId:
          type: integer
        tcgApiFilter:
          type: integer
        collecting_variations:
          type: integer
        cardSort:
          type: integer
        cardApiOrderBy:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - ownerId
        - tcgApiFilter
        - collecting_variations
        - cardSort
        - cardApiOrderBy
        - _all
    CollectionMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ownerId:
          type: string
        tcgApiFilter:
          type: string
        collecting_variations:
          type: boolean
        cardSort:
          type: string
        cardApiOrderBy:
          type: string
    CollectionMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ownerId:
          type: string
        tcgApiFilter:
          type: string
        collecting_variations:
          type: boolean
        cardSort:
          type: string
        cardApiOrderBy:
          type: string
    CollectionCardCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        collectionId:
          type: integer
        tcgApiCardId:
          type: integer
        index:
          type: integer
        owned:
          type: integer
        ownedVariation:
          type: integer
        awaitingOwnership:
          type: integer
        awaitingOwnershipVariation:
          type: integer
        _all:
          type: integer
      required:
        - id
        - collectionId
        - tcgApiCardId
        - index
        - owned
        - ownedVariation
        - awaitingOwnership
        - awaitingOwnershipVariation
        - _all
    CollectionCardAvgAggregateOutputType:
      type: object
      properties:
        index:
          type: number
    CollectionCardSumAggregateOutputType:
      type: object
      properties:
        index:
          type: integer
    CollectionCardMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        collectionId:
          type: string
        tcgApiCardId:
          type: string
        index:
          type: integer
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
    CollectionCardMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        collectionId:
          type: string
        tcgApiCardId:
          type: string
        index:
          type: integer
        owned:
          type: boolean
        ownedVariation:
          type: boolean
        awaitingOwnership:
          type: boolean
        awaitingOwnershipVariation:
          type: boolean
    TcgApiSetCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        tcgSetId:
          type: integer
        name:
          type: integer
        series:
          type: integer
        printedTotal:
          type: integer
        total:
          type: integer
        legalities:
          type: integer
        ptcgoCode:
          type: integer
        releaseDate:
          type: integer
        updatedAt:
          type: integer
        images:
          type: integer
        requiresCardUpdate:
          type: integer
        _all:
          type: integer
      required:
        - id
        - tcgSetId
        - name
        - series
        - printedTotal
        - total
        - legalities
        - ptcgoCode
        - releaseDate
        - updatedAt
        - images
        - requiresCardUpdate
        - _all
    TcgApiSetAvgAggregateOutputType:
      type: object
      properties:
        printedTotal:
          type: number
        total:
          type: number
    TcgApiSetSumAggregateOutputType:
      type: object
      properties:
        printedTotal:
          type: integer
        total:
          type: integer
    TcgApiSetMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        tcgSetId:
          type: string
        name:
          type: string
        series:
          type: string
        printedTotal:
          type: integer
        total:
          type: integer
        legalities:
          type: string
        ptcgoCode:
          type: string
        releaseDate:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        requiresCardUpdate:
          type: boolean
    TcgApiSetMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        tcgSetId:
          type: string
        name:
          type: string
        series:
          type: string
        printedTotal:
          type: integer
        total:
          type: integer
        legalities:
          type: string
        ptcgoCode:
          type: string
        releaseDate:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        requiresCardUpdate:
          type: boolean
    TcgApiCardCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        cardTcgId:
          type: integer
        setTcgId:
          type: integer
        name:
          type: integer
        supertype:
          type: integer
        subtypes:
          type: integer
        hp:
          type: integer
        types:
          type: integer
        evolvesFrom:
          type: integer
        evolvesTo:
          type: integer
        rules:
          type: integer
        ancientTrait:
          type: integer
        abilities:
          type: integer
        attacks:
          type: integer
        weaknesses:
          type: integer
        resistances:
          type: integer
        retreatCost:
          type: integer
        convertedRetreatCost:
          type: integer
        number:
          type: integer
        artist:
          type: integer
        rarity:
          type: integer
        flavorText:
          type: integer
        nationalPokedexNumbers:
          type: integer
        legalities:
          type: integer
        images:
          type: integer
        setLib:
          type: integer
        setId:
          type: integer
        _all:
          type: integer
      required:
        - id
        - cardTcgId
        - setTcgId
        - name
        - supertype
        - subtypes
        - hp
        - types
        - evolvesFrom
        - evolvesTo
        - rules
        - ancientTrait
        - abilities
        - attacks
        - weaknesses
        - resistances
        - retreatCost
        - convertedRetreatCost
        - number
        - artist
        - rarity
        - flavorText
        - nationalPokedexNumbers
        - legalities
        - images
        - setLib
        - setId
        - _all
    TcgApiCardAvgAggregateOutputType:
      type: object
      properties:
        convertedRetreatCost:
          type: number
        nationalPokedexNumbers:
          type: number
    TcgApiCardSumAggregateOutputType:
      type: object
      properties:
        convertedRetreatCost:
          type: integer
        nationalPokedexNumbers:
          type: array
          items:
            type: integer
    TcgApiCardMinAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        cardTcgId:
          type: string
        setTcgId:
          type: string
        name:
          type: string
        hp:
          type: string
        evolvesFrom:
          type: string
        convertedRetreatCost:
          type: integer
        number:
          type: string
        artist:
          type: string
        rarity:
          type: string
        flavorText:
          type: string
        setId:
          type: string
    TcgApiCardMaxAggregateOutputType:
      type: object
      properties:
        id:
          type: string
        cardTcgId:
          type: string
        setTcgId:
          type: string
        name:
          type: string
        hp:
          type: string
        evolvesFrom:
          type: string
        convertedRetreatCost:
          type: integer
        number:
          type: string
        artist:
          type: string
        rarity:
          type: string
        flavorText:
          type: string
        setId:
          type: string
    _Meta:
      type: object
      properties:
        meta:
          type: object
          description: Meta information about the request or response
          properties:
            serialization:
              description: Serialization metadata
          additionalProperties: true
    _Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - message
          properties:
            prisma:
              type: boolean
              description: Indicates if the error occurred during a Prisma call
            rejectedByPolicy:
              type: boolean
              description: Indicates if the error was due to rejection by a policy
            code:
              type: string
              description: Prisma error code. Only available when "prisma" field is true.
            message:
              type: string
              description: Error message
            reason:
              type: string
              description: Detailed error reason
            zodErrors:
              type: object
              additionalProperties: true
              description: Zod validation errors if the error is due to data validation
                failure
          additionalProperties: true
    BatchPayload:
      type: object
      properties:
        count:
          type: integer
    AccountCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        data:
          $ref: "#/components/schemas/AccountCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/AccountCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        data:
          $ref: "#/components/schemas/AccountUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        data:
          $ref: "#/components/schemas/AccountUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        create:
          $ref: "#/components/schemas/AccountCreateInput"
        update:
          $ref: "#/components/schemas/AccountUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        orderBy:
          $ref: "#/components/schemas/AccountOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountCountAggregateInput"
        _min:
          $ref: "#/components/schemas/AccountMinAggregateInput"
        _max:
          $ref: "#/components/schemas/AccountMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/AccountSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/AccountAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        orderBy:
          $ref: "#/components/schemas/AccountOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/AccountScalarFieldEnum"
        having:
          $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountCountAggregateInput"
        _min:
          $ref: "#/components/schemas/AccountMinAggregateInput"
        _max:
          $ref: "#/components/schemas/AccountMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/AccountSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/AccountAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        data:
          $ref: "#/components/schemas/SessionCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/SessionCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        data:
          $ref: "#/components/schemas/SessionUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        data:
          $ref: "#/components/schemas/SessionUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        create:
          $ref: "#/components/schemas/SessionCreateInput"
        update:
          $ref: "#/components/schemas/SessionUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        orderBy:
          $ref: "#/components/schemas/SessionOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SessionMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SessionMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        orderBy:
          $ref: "#/components/schemas/SessionOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/SessionScalarFieldEnum"
        having:
          $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SessionMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SessionMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        data:
          $ref: "#/components/schemas/UserCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/UserCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        data:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          $ref: "#/components/schemas/UserUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          $ref: "#/components/schemas/UserCreateInput"
        update:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/UserScalarFieldEnum"
        having:
          $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        data:
          $ref: "#/components/schemas/VerificationTokenCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/VerificationTokenCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        data:
          $ref: "#/components/schemas/VerificationTokenUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        data:
          $ref: "#/components/schemas/VerificationTokenUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        create:
          $ref: "#/components/schemas/VerificationTokenCreateInput"
        update:
          $ref: "#/components/schemas/VerificationTokenUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        orderBy:
          $ref: "#/components/schemas/VerificationTokenOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/VerificationTokenCountAggregateInput"
        _min:
          $ref: "#/components/schemas/VerificationTokenMinAggregateInput"
        _max:
          $ref: "#/components/schemas/VerificationTokenMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        orderBy:
          $ref: "#/components/schemas/VerificationTokenOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/VerificationTokenScalarFieldEnum"
        having:
          $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/VerificationTokenCountAggregateInput"
        _min:
          $ref: "#/components/schemas/VerificationTokenMinAggregateInput"
        _max:
          $ref: "#/components/schemas/VerificationTokenMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/SpaceSelect"
        include:
          $ref: "#/components/schemas/SpaceInclude"
        data:
          $ref: "#/components/schemas/SpaceCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/SpaceCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SpaceSelect"
        include:
          $ref: "#/components/schemas/SpaceInclude"
        where:
          $ref: "#/components/schemas/SpaceWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SpaceSelect"
        include:
          $ref: "#/components/schemas/SpaceInclude"
        where:
          $ref: "#/components/schemas/SpaceWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SpaceSelect"
        include:
          $ref: "#/components/schemas/SpaceInclude"
        where:
          $ref: "#/components/schemas/SpaceWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/SpaceSelect"
        include:
          $ref: "#/components/schemas/SpaceInclude"
        where:
          $ref: "#/components/schemas/SpaceWhereUniqueInput"
        data:
          $ref: "#/components/schemas/SpaceUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/SpaceWhereInput"
        data:
          $ref: "#/components/schemas/SpaceUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/SpaceSelect"
        include:
          $ref: "#/components/schemas/SpaceInclude"
        where:
          $ref: "#/components/schemas/SpaceWhereUniqueInput"
        create:
          $ref: "#/components/schemas/SpaceCreateInput"
        update:
          $ref: "#/components/schemas/SpaceUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SpaceSelect"
        include:
          $ref: "#/components/schemas/SpaceInclude"
        where:
          $ref: "#/components/schemas/SpaceWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SpaceSelect"
        where:
          $ref: "#/components/schemas/SpaceWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceWhereInput"
        orderBy:
          $ref: "#/components/schemas/SpaceOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/SpaceWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SpaceMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SpaceMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceWhereInput"
        orderBy:
          $ref: "#/components/schemas/SpaceOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/SpaceScalarFieldEnum"
        having:
          $ref: "#/components/schemas/SpaceScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SpaceMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SpaceMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUserCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/SpaceUserSelect"
        include:
          $ref: "#/components/schemas/SpaceUserInclude"
        data:
          $ref: "#/components/schemas/SpaceUserCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUserCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/SpaceUserCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUserFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SpaceUserSelect"
        include:
          $ref: "#/components/schemas/SpaceUserInclude"
        where:
          $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUserFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SpaceUserSelect"
        include:
          $ref: "#/components/schemas/SpaceUserInclude"
        where:
          $ref: "#/components/schemas/SpaceUserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUserFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SpaceUserSelect"
        include:
          $ref: "#/components/schemas/SpaceUserInclude"
        where:
          $ref: "#/components/schemas/SpaceUserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUserUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/SpaceUserSelect"
        include:
          $ref: "#/components/schemas/SpaceUserInclude"
        where:
          $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        data:
          $ref: "#/components/schemas/SpaceUserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUserUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/SpaceUserWhereInput"
        data:
          $ref: "#/components/schemas/SpaceUserUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUserUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/SpaceUserSelect"
        include:
          $ref: "#/components/schemas/SpaceUserInclude"
        where:
          $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        create:
          $ref: "#/components/schemas/SpaceUserCreateInput"
        update:
          $ref: "#/components/schemas/SpaceUserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUserDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SpaceUserSelect"
        include:
          $ref: "#/components/schemas/SpaceUserInclude"
        where:
          $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUserDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceUserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUserCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SpaceUserSelect"
        where:
          $ref: "#/components/schemas/SpaceUserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUserAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceUserWhereInput"
        orderBy:
          $ref: "#/components/schemas/SpaceUserOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/SpaceUserWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceUserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SpaceUserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SpaceUserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SpaceUserGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SpaceUserWhereInput"
        orderBy:
          $ref: "#/components/schemas/SpaceUserOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/SpaceUserScalarFieldEnum"
        having:
          $ref: "#/components/schemas/SpaceUserScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SpaceUserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SpaceUserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SpaceUserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/ListSelect"
        include:
          $ref: "#/components/schemas/ListInclude"
        data:
          $ref: "#/components/schemas/ListCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/ListCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ListSelect"
        include:
          $ref: "#/components/schemas/ListInclude"
        where:
          $ref: "#/components/schemas/ListWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ListSelect"
        include:
          $ref: "#/components/schemas/ListInclude"
        where:
          $ref: "#/components/schemas/ListWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ListSelect"
        include:
          $ref: "#/components/schemas/ListInclude"
        where:
          $ref: "#/components/schemas/ListWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/ListSelect"
        include:
          $ref: "#/components/schemas/ListInclude"
        where:
          $ref: "#/components/schemas/ListWhereUniqueInput"
        data:
          $ref: "#/components/schemas/ListUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/ListWhereInput"
        data:
          $ref: "#/components/schemas/ListUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/ListSelect"
        include:
          $ref: "#/components/schemas/ListInclude"
        where:
          $ref: "#/components/schemas/ListWhereUniqueInput"
        create:
          $ref: "#/components/schemas/ListCreateInput"
        update:
          $ref: "#/components/schemas/ListUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ListSelect"
        include:
          $ref: "#/components/schemas/ListInclude"
        where:
          $ref: "#/components/schemas/ListWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ListSelect"
        where:
          $ref: "#/components/schemas/ListWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListWhereInput"
        orderBy:
          $ref: "#/components/schemas/ListOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/ListWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ListMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ListMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ListGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ListWhereInput"
        orderBy:
          $ref: "#/components/schemas/ListOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/ListScalarFieldEnum"
        having:
          $ref: "#/components/schemas/ListScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ListCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ListMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ListMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodoCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/TodoSelect"
        include:
          $ref: "#/components/schemas/TodoInclude"
        data:
          $ref: "#/components/schemas/TodoCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodoCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/TodoCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodoFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TodoSelect"
        include:
          $ref: "#/components/schemas/TodoInclude"
        where:
          $ref: "#/components/schemas/TodoWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodoFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TodoSelect"
        include:
          $ref: "#/components/schemas/TodoInclude"
        where:
          $ref: "#/components/schemas/TodoWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodoFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TodoSelect"
        include:
          $ref: "#/components/schemas/TodoInclude"
        where:
          $ref: "#/components/schemas/TodoWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodoUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/TodoSelect"
        include:
          $ref: "#/components/schemas/TodoInclude"
        where:
          $ref: "#/components/schemas/TodoWhereUniqueInput"
        data:
          $ref: "#/components/schemas/TodoUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodoUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/TodoWhereInput"
        data:
          $ref: "#/components/schemas/TodoUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodoUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/TodoSelect"
        include:
          $ref: "#/components/schemas/TodoInclude"
        where:
          $ref: "#/components/schemas/TodoWhereUniqueInput"
        create:
          $ref: "#/components/schemas/TodoCreateInput"
        update:
          $ref: "#/components/schemas/TodoUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodoDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TodoSelect"
        include:
          $ref: "#/components/schemas/TodoInclude"
        where:
          $ref: "#/components/schemas/TodoWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodoDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodoWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodoCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TodoSelect"
        where:
          $ref: "#/components/schemas/TodoWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodoAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodoWhereInput"
        orderBy:
          $ref: "#/components/schemas/TodoOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/TodoWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodoCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TodoMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TodoMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TodoGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TodoWhereInput"
        orderBy:
          $ref: "#/components/schemas/TodoOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/TodoScalarFieldEnum"
        having:
          $ref: "#/components/schemas/TodoScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TodoCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TodoMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TodoMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/CollectionSelect"
        include:
          $ref: "#/components/schemas/CollectionInclude"
        data:
          $ref: "#/components/schemas/CollectionCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/CollectionCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/CollectionSelect"
        include:
          $ref: "#/components/schemas/CollectionInclude"
        where:
          $ref: "#/components/schemas/CollectionWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/CollectionSelect"
        include:
          $ref: "#/components/schemas/CollectionInclude"
        where:
          $ref: "#/components/schemas/CollectionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/CollectionSelect"
        include:
          $ref: "#/components/schemas/CollectionInclude"
        where:
          $ref: "#/components/schemas/CollectionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/CollectionSelect"
        include:
          $ref: "#/components/schemas/CollectionInclude"
        where:
          $ref: "#/components/schemas/CollectionWhereUniqueInput"
        data:
          $ref: "#/components/schemas/CollectionUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/CollectionWhereInput"
        data:
          $ref: "#/components/schemas/CollectionUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/CollectionSelect"
        include:
          $ref: "#/components/schemas/CollectionInclude"
        where:
          $ref: "#/components/schemas/CollectionWhereUniqueInput"
        create:
          $ref: "#/components/schemas/CollectionCreateInput"
        update:
          $ref: "#/components/schemas/CollectionUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/CollectionSelect"
        include:
          $ref: "#/components/schemas/CollectionInclude"
        where:
          $ref: "#/components/schemas/CollectionWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/CollectionSelect"
        where:
          $ref: "#/components/schemas/CollectionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionWhereInput"
        orderBy:
          $ref: "#/components/schemas/CollectionOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/CollectionWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionCountAggregateInput"
        _min:
          $ref: "#/components/schemas/CollectionMinAggregateInput"
        _max:
          $ref: "#/components/schemas/CollectionMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionWhereInput"
        orderBy:
          $ref: "#/components/schemas/CollectionOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/CollectionScalarFieldEnum"
        having:
          $ref: "#/components/schemas/CollectionScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionCountAggregateInput"
        _min:
          $ref: "#/components/schemas/CollectionMinAggregateInput"
        _max:
          $ref: "#/components/schemas/CollectionMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCardCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/CollectionCardSelect"
        include:
          $ref: "#/components/schemas/CollectionCardInclude"
        data:
          $ref: "#/components/schemas/CollectionCardCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCardCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/CollectionCardCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCardFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/CollectionCardSelect"
        include:
          $ref: "#/components/schemas/CollectionCardInclude"
        where:
          $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCardFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/CollectionCardSelect"
        include:
          $ref: "#/components/schemas/CollectionCardInclude"
        where:
          $ref: "#/components/schemas/CollectionCardWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCardFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/CollectionCardSelect"
        include:
          $ref: "#/components/schemas/CollectionCardInclude"
        where:
          $ref: "#/components/schemas/CollectionCardWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCardUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/CollectionCardSelect"
        include:
          $ref: "#/components/schemas/CollectionCardInclude"
        where:
          $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        data:
          $ref: "#/components/schemas/CollectionCardUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCardUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/CollectionCardWhereInput"
        data:
          $ref: "#/components/schemas/CollectionCardUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCardUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/CollectionCardSelect"
        include:
          $ref: "#/components/schemas/CollectionCardInclude"
        where:
          $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        create:
          $ref: "#/components/schemas/CollectionCardCreateInput"
        update:
          $ref: "#/components/schemas/CollectionCardUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCardDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/CollectionCardSelect"
        include:
          $ref: "#/components/schemas/CollectionCardInclude"
        where:
          $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCardDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionCardWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCardCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/CollectionCardSelect"
        where:
          $ref: "#/components/schemas/CollectionCardWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCardAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionCardWhereInput"
        orderBy:
          $ref: "#/components/schemas/CollectionCardOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/CollectionCardWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionCardCountAggregateInput"
        _min:
          $ref: "#/components/schemas/CollectionCardMinAggregateInput"
        _max:
          $ref: "#/components/schemas/CollectionCardMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/CollectionCardSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/CollectionCardAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    CollectionCardGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/CollectionCardWhereInput"
        orderBy:
          $ref: "#/components/schemas/CollectionCardOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/CollectionCardScalarFieldEnum"
        having:
          $ref: "#/components/schemas/CollectionCardScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/CollectionCardCountAggregateInput"
        _min:
          $ref: "#/components/schemas/CollectionCardMinAggregateInput"
        _max:
          $ref: "#/components/schemas/CollectionCardMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/CollectionCardSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/CollectionCardAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiSetCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/TcgApiSetSelect"
        include:
          $ref: "#/components/schemas/TcgApiSetInclude"
        data:
          $ref: "#/components/schemas/TcgApiSetCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiSetCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/TcgApiSetCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiSetFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TcgApiSetSelect"
        include:
          $ref: "#/components/schemas/TcgApiSetInclude"
        where:
          $ref: "#/components/schemas/TcgApiSetWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiSetFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TcgApiSetSelect"
        include:
          $ref: "#/components/schemas/TcgApiSetInclude"
        where:
          $ref: "#/components/schemas/TcgApiSetWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiSetFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TcgApiSetSelect"
        include:
          $ref: "#/components/schemas/TcgApiSetInclude"
        where:
          $ref: "#/components/schemas/TcgApiSetWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiSetUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/TcgApiSetSelect"
        include:
          $ref: "#/components/schemas/TcgApiSetInclude"
        where:
          $ref: "#/components/schemas/TcgApiSetWhereUniqueInput"
        data:
          $ref: "#/components/schemas/TcgApiSetUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiSetUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/TcgApiSetWhereInput"
        data:
          $ref: "#/components/schemas/TcgApiSetUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiSetUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/TcgApiSetSelect"
        include:
          $ref: "#/components/schemas/TcgApiSetInclude"
        where:
          $ref: "#/components/schemas/TcgApiSetWhereUniqueInput"
        create:
          $ref: "#/components/schemas/TcgApiSetCreateInput"
        update:
          $ref: "#/components/schemas/TcgApiSetUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiSetDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TcgApiSetSelect"
        include:
          $ref: "#/components/schemas/TcgApiSetInclude"
        where:
          $ref: "#/components/schemas/TcgApiSetWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiSetDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiSetWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiSetCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TcgApiSetSelect"
        where:
          $ref: "#/components/schemas/TcgApiSetWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiSetAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiSetWhereInput"
        orderBy:
          $ref: "#/components/schemas/TcgApiSetOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/TcgApiSetWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiSetCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TcgApiSetMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TcgApiSetMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/TcgApiSetSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/TcgApiSetAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiSetGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiSetWhereInput"
        orderBy:
          $ref: "#/components/schemas/TcgApiSetOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/TcgApiSetScalarFieldEnum"
        having:
          $ref: "#/components/schemas/TcgApiSetScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiSetCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TcgApiSetMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TcgApiSetMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/TcgApiSetSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/TcgApiSetAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiCardCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/TcgApiCardSelect"
        include:
          $ref: "#/components/schemas/TcgApiCardInclude"
        data:
          $ref: "#/components/schemas/TcgApiCardCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiCardCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/TcgApiCardCreateManyInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiCardFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TcgApiCardSelect"
        include:
          $ref: "#/components/schemas/TcgApiCardInclude"
        where:
          $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiCardFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TcgApiCardSelect"
        include:
          $ref: "#/components/schemas/TcgApiCardInclude"
        where:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiCardFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TcgApiCardSelect"
        include:
          $ref: "#/components/schemas/TcgApiCardInclude"
        where:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiCardUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/TcgApiCardSelect"
        include:
          $ref: "#/components/schemas/TcgApiCardInclude"
        where:
          $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        data:
          $ref: "#/components/schemas/TcgApiCardUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiCardUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
        data:
          $ref: "#/components/schemas/TcgApiCardUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiCardUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/TcgApiCardSelect"
        include:
          $ref: "#/components/schemas/TcgApiCardInclude"
        where:
          $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        create:
          $ref: "#/components/schemas/TcgApiCardCreateInput"
        update:
          $ref: "#/components/schemas/TcgApiCardUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiCardDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TcgApiCardSelect"
        include:
          $ref: "#/components/schemas/TcgApiCardInclude"
        where:
          $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiCardDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiCardCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TcgApiCardSelect"
        where:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiCardAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
        orderBy:
          $ref: "#/components/schemas/TcgApiCardOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/TcgApiCardWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiCardCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TcgApiCardMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TcgApiCardMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/TcgApiCardSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/TcgApiCardAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TcgApiCardGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TcgApiCardWhereInput"
        orderBy:
          $ref: "#/components/schemas/TcgApiCardOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/TcgApiCardScalarFieldEnum"
        having:
          $ref: "#/components/schemas/TcgApiCardScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TcgApiCardCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TcgApiCardMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TcgApiCardMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/TcgApiCardSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/TcgApiCardAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
paths:
  /api/model/account/create:
    post:
      operationId: createAccount
      description: Create a new Account
      tags:
        - account
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCreateArgs"
  /api/model/account/createMany:
    post:
      operationId: createManyAccount
      description: Create several Account
      tags:
        - account
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCreateManyArgs"
  /api/model/account/findUnique:
    get:
      operationId: findUniqueAccount
      description: Find one unique Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/findFirst:
    get:
      operationId: findFirstAccount
      description: Find the first Account matching the given condition
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/findMany:
    get:
      operationId: findManyAccount
      description: Find a list of Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/update:
    patch:
      operationId: updateAccount
      description: Update a Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpdateArgs"
  /api/model/account/updateMany:
    patch:
      operationId: updateManyAccount
      description: Update Accounts matching the given condition
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpdateManyArgs"
  /api/model/account/upsert:
    post:
      operationId: upsertAccount
      description: Upsert a Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpsertArgs"
  /api/model/account/delete:
    delete:
      operationId: deleteAccount
      description: Delete one unique Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/deleteMany:
    delete:
      operationId: deleteManyAccount
      description: Delete Accounts matching the given condition
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/count:
    get:
      operationId: countAccount
      description: Find a list of Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/AccountCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/aggregate:
    get:
      operationId: aggregateAccount
      description: Aggregate Accounts
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateAccount"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/account/groupBy:
    get:
      operationId: groupByAccount
      description: Group Accounts by fields
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AccountGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/create:
    post:
      operationId: createSession
      description: Create a new Session
      tags:
        - session
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionCreateArgs"
  /api/model/session/createMany:
    post:
      operationId: createManySession
      description: Create several Session
      tags:
        - session
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionCreateManyArgs"
  /api/model/session/findUnique:
    get:
      operationId: findUniqueSession
      description: Find one unique Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/findFirst:
    get:
      operationId: findFirstSession
      description: Find the first Session matching the given condition
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/findMany:
    get:
      operationId: findManySession
      description: Find a list of Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/update:
    patch:
      operationId: updateSession
      description: Update a Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionUpdateArgs"
  /api/model/session/updateMany:
    patch:
      operationId: updateManySession
      description: Update Sessions matching the given condition
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionUpdateManyArgs"
  /api/model/session/upsert:
    post:
      operationId: upsertSession
      description: Upsert a Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionUpsertArgs"
  /api/model/session/delete:
    delete:
      operationId: deleteSession
      description: Delete one unique Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/deleteMany:
    delete:
      operationId: deleteManySession
      description: Delete Sessions matching the given condition
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/count:
    get:
      operationId: countSession
      description: Find a list of Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/SessionCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/aggregate:
    get:
      operationId: aggregateSession
      description: Aggregate Sessions
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateSession"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/session/groupBy:
    get:
      operationId: groupBySession
      description: Group Sessions by fields
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SessionGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/create:
    post:
      operationId: createUser
      description: Create a new User
      tags:
        - user
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateArgs"
  /api/model/user/createMany:
    post:
      operationId: createManyUser
      description: Create several User
      tags:
        - user
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateManyArgs"
  /api/model/user/findUnique:
    get:
      operationId: findUniqueUser
      description: Find one unique User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/findFirst:
    get:
      operationId: findFirstUser
      description: Find the first User matching the given condition
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/findMany:
    get:
      operationId: findManyUser
      description: Find a list of User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/update:
    patch:
      operationId: updateUser
      description: Update a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateArgs"
  /api/model/user/updateMany:
    patch:
      operationId: updateManyUser
      description: Update Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateManyArgs"
  /api/model/user/upsert:
    post:
      operationId: upsertUser
      description: Upsert a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpsertArgs"
  /api/model/user/delete:
    delete:
      operationId: deleteUser
      description: Delete one unique User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/deleteMany:
    delete:
      operationId: deleteManyUser
      description: Delete Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/count:
    get:
      operationId: countUser
      description: Find a list of User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/UserCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/aggregate:
    get:
      operationId: aggregateUser
      description: Aggregate Users
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/user/groupBy:
    get:
      operationId: groupByUser
      description: Group Users by fields
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/create:
    post:
      operationId: createVerificationToken
      description: Create a new VerificationToken
      tags:
        - verificationToken
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenCreateArgs"
  /api/model/verificationToken/createMany:
    post:
      operationId: createManyVerificationToken
      description: Create several VerificationToken
      tags:
        - verificationToken
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenCreateManyArgs"
  /api/model/verificationToken/findUnique:
    get:
      operationId: findUniqueVerificationToken
      description: Find one unique VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/findFirst:
    get:
      operationId: findFirstVerificationToken
      description: Find the first VerificationToken matching the given condition
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/findMany:
    get:
      operationId: findManyVerificationToken
      description: Find a list of VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/update:
    patch:
      operationId: updateVerificationToken
      description: Update a VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenUpdateArgs"
  /api/model/verificationToken/updateMany:
    patch:
      operationId: updateManyVerificationToken
      description: Update VerificationTokens matching the given condition
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenUpdateManyArgs"
  /api/model/verificationToken/upsert:
    post:
      operationId: upsertVerificationToken
      description: Upsert a VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenUpsertArgs"
  /api/model/verificationToken/delete:
    delete:
      operationId: deleteVerificationToken
      description: Delete one unique VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/deleteMany:
    delete:
      operationId: deleteManyVerificationToken
      description: Delete VerificationTokens matching the given condition
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/count:
    get:
      operationId: countVerificationToken
      description: Find a list of VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/VerificationTokenCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/aggregate:
    get:
      operationId: aggregateVerificationToken
      description: Aggregate VerificationTokens
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateVerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/verificationToken/groupBy:
    get:
      operationId: groupByVerificationToken
      description: Group VerificationTokens by fields
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/VerificationTokenGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/space/create:
    post:
      operationId: createSpace
      description: Create a new Space
      tags:
        - space
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Space"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpaceCreateArgs"
  /api/model/space/createMany:
    post:
      operationId: createManySpace
      description: Create several Space
      tags:
        - space
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpaceCreateManyArgs"
  /api/model/space/findUnique:
    get:
      operationId: findUniqueSpace
      description: Find one unique Space
      tags:
        - space
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Space"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/space/findFirst:
    get:
      operationId: findFirstSpace
      description: Find the first Space matching the given condition
      tags:
        - space
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Space"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/space/findMany:
    get:
      operationId: findManySpace
      description: Find a list of Space
      tags:
        - space
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Space"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/space/update:
    patch:
      operationId: updateSpace
      description: Update a Space
      tags:
        - space
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Space"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpaceUpdateArgs"
  /api/model/space/updateMany:
    patch:
      operationId: updateManySpace
      description: Update Spaces matching the given condition
      tags:
        - space
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpaceUpdateManyArgs"
  /api/model/space/upsert:
    post:
      operationId: upsertSpace
      description: Upsert a Space
      tags:
        - space
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Space"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpaceUpsertArgs"
  /api/model/space/delete:
    delete:
      operationId: deleteSpace
      description: Delete one unique Space
      tags:
        - space
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Space"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/space/deleteMany:
    delete:
      operationId: deleteManySpace
      description: Delete Spaces matching the given condition
      tags:
        - space
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/space/count:
    get:
      operationId: countSpace
      description: Find a list of Space
      tags:
        - space
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/SpaceCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/space/aggregate:
    get:
      operationId: aggregateSpace
      description: Aggregate Spaces
      tags:
        - space
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateSpace"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/space/groupBy:
    get:
      operationId: groupBySpace
      description: Group Spaces by fields
      tags:
        - space
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SpaceGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/spaceUser/create:
    post:
      operationId: createSpaceUser
      description: Create a new SpaceUser
      tags:
        - spaceUser
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/SpaceUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpaceUserCreateArgs"
  /api/model/spaceUser/createMany:
    post:
      operationId: createManySpaceUser
      description: Create several SpaceUser
      tags:
        - spaceUser
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpaceUserCreateManyArgs"
  /api/model/spaceUser/findUnique:
    get:
      operationId: findUniqueSpaceUser
      description: Find one unique SpaceUser
      tags:
        - spaceUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/SpaceUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceUserFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/spaceUser/findFirst:
    get:
      operationId: findFirstSpaceUser
      description: Find the first SpaceUser matching the given condition
      tags:
        - spaceUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/SpaceUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceUserFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/spaceUser/findMany:
    get:
      operationId: findManySpaceUser
      description: Find a list of SpaceUser
      tags:
        - spaceUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SpaceUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceUserFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/spaceUser/update:
    patch:
      operationId: updateSpaceUser
      description: Update a SpaceUser
      tags:
        - spaceUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/SpaceUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpaceUserUpdateArgs"
  /api/model/spaceUser/updateMany:
    patch:
      operationId: updateManySpaceUser
      description: Update SpaceUsers matching the given condition
      tags:
        - spaceUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpaceUserUpdateManyArgs"
  /api/model/spaceUser/upsert:
    post:
      operationId: upsertSpaceUser
      description: Upsert a SpaceUser
      tags:
        - spaceUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/SpaceUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpaceUserUpsertArgs"
  /api/model/spaceUser/delete:
    delete:
      operationId: deleteSpaceUser
      description: Delete one unique SpaceUser
      tags:
        - spaceUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/SpaceUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceUserDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/spaceUser/deleteMany:
    delete:
      operationId: deleteManySpaceUser
      description: Delete SpaceUsers matching the given condition
      tags:
        - spaceUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceUserDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/spaceUser/count:
    get:
      operationId: countSpaceUser
      description: Find a list of SpaceUser
      tags:
        - spaceUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/SpaceUserCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceUserCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/spaceUser/aggregate:
    get:
      operationId: aggregateSpaceUser
      description: Aggregate SpaceUsers
      tags:
        - spaceUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateSpaceUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceUserAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/spaceUser/groupBy:
    get:
      operationId: groupBySpaceUser
      description: Group SpaceUsers by fields
      tags:
        - spaceUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SpaceUserGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpaceUserGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/list/create:
    post:
      operationId: createList
      description: Create a new List
      tags:
        - list
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/List"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListCreateArgs"
  /api/model/list/createMany:
    post:
      operationId: createManyList
      description: Create several List
      tags:
        - list
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListCreateManyArgs"
  /api/model/list/findUnique:
    get:
      operationId: findUniqueList
      description: Find one unique List
      tags:
        - list
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/List"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/list/findFirst:
    get:
      operationId: findFirstList
      description: Find the first List matching the given condition
      tags:
        - list
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/List"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/list/findMany:
    get:
      operationId: findManyList
      description: Find a list of List
      tags:
        - list
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/List"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/list/update:
    patch:
      operationId: updateList
      description: Update a List
      tags:
        - list
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/List"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListUpdateArgs"
  /api/model/list/updateMany:
    patch:
      operationId: updateManyList
      description: Update Lists matching the given condition
      tags:
        - list
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListUpdateManyArgs"
  /api/model/list/upsert:
    post:
      operationId: upsertList
      description: Upsert a List
      tags:
        - list
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/List"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListUpsertArgs"
  /api/model/list/delete:
    delete:
      operationId: deleteList
      description: Delete one unique List
      tags:
        - list
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/List"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/list/deleteMany:
    delete:
      operationId: deleteManyList
      description: Delete Lists matching the given condition
      tags:
        - list
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/list/count:
    get:
      operationId: countList
      description: Find a list of List
      tags:
        - list
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/ListCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/list/aggregate:
    get:
      operationId: aggregateList
      description: Aggregate Lists
      tags:
        - list
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateList"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/list/groupBy:
    get:
      operationId: groupByList
      description: Group Lists by fields
      tags:
        - list
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ListGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/todo/create:
    post:
      operationId: createTodo
      description: Create a new Todo
      tags:
        - todo
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todo"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoCreateArgs"
  /api/model/todo/createMany:
    post:
      operationId: createManyTodo
      description: Create several Todo
      tags:
        - todo
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoCreateManyArgs"
  /api/model/todo/findUnique:
    get:
      operationId: findUniqueTodo
      description: Find one unique Todo
      tags:
        - todo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todo"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/todo/findFirst:
    get:
      operationId: findFirstTodo
      description: Find the first Todo matching the given condition
      tags:
        - todo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todo"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/todo/findMany:
    get:
      operationId: findManyTodo
      description: Find a list of Todo
      tags:
        - todo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Todo"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/todo/update:
    patch:
      operationId: updateTodo
      description: Update a Todo
      tags:
        - todo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todo"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoUpdateArgs"
  /api/model/todo/updateMany:
    patch:
      operationId: updateManyTodo
      description: Update Todos matching the given condition
      tags:
        - todo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoUpdateManyArgs"
  /api/model/todo/upsert:
    post:
      operationId: upsertTodo
      description: Upsert a Todo
      tags:
        - todo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todo"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoUpsertArgs"
  /api/model/todo/delete:
    delete:
      operationId: deleteTodo
      description: Delete one unique Todo
      tags:
        - todo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Todo"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/todo/deleteMany:
    delete:
      operationId: deleteManyTodo
      description: Delete Todos matching the given condition
      tags:
        - todo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/todo/count:
    get:
      operationId: countTodo
      description: Find a list of Todo
      tags:
        - todo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/TodoCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/todo/aggregate:
    get:
      operationId: aggregateTodo
      description: Aggregate Todos
      tags:
        - todo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateTodo"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/todo/groupBy:
    get:
      operationId: groupByTodo
      description: Group Todos by fields
      tags:
        - todo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TodoGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collection/create:
    post:
      operationId: createCollection
      description: Create a new Collection
      tags:
        - collection
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Collection"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionCreateArgs"
  /api/model/collection/createMany:
    post:
      operationId: createManyCollection
      description: Create several Collection
      tags:
        - collection
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionCreateManyArgs"
  /api/model/collection/findUnique:
    get:
      operationId: findUniqueCollection
      description: Find one unique Collection
      tags:
        - collection
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Collection"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collection/findFirst:
    get:
      operationId: findFirstCollection
      description: Find the first Collection matching the given condition
      tags:
        - collection
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Collection"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collection/findMany:
    get:
      operationId: findManyCollection
      description: Find a list of Collection
      tags:
        - collection
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Collection"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collection/update:
    patch:
      operationId: updateCollection
      description: Update a Collection
      tags:
        - collection
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Collection"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionUpdateArgs"
  /api/model/collection/updateMany:
    patch:
      operationId: updateManyCollection
      description: Update Collections matching the given condition
      tags:
        - collection
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionUpdateManyArgs"
  /api/model/collection/upsert:
    post:
      operationId: upsertCollection
      description: Upsert a Collection
      tags:
        - collection
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Collection"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionUpsertArgs"
  /api/model/collection/delete:
    delete:
      operationId: deleteCollection
      description: Delete one unique Collection
      tags:
        - collection
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Collection"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collection/deleteMany:
    delete:
      operationId: deleteManyCollection
      description: Delete Collections matching the given condition
      tags:
        - collection
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collection/count:
    get:
      operationId: countCollection
      description: Find a list of Collection
      tags:
        - collection
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/CollectionCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collection/aggregate:
    get:
      operationId: aggregateCollection
      description: Aggregate Collections
      tags:
        - collection
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateCollection"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collection/groupBy:
    get:
      operationId: groupByCollection
      description: Group Collections by fields
      tags:
        - collection
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CollectionGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collectionCard/create:
    post:
      operationId: createCollectionCard
      description: Create a new CollectionCard
      tags:
        - collectionCard
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/CollectionCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionCardCreateArgs"
  /api/model/collectionCard/createMany:
    post:
      operationId: createManyCollectionCard
      description: Create several CollectionCard
      tags:
        - collectionCard
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionCardCreateManyArgs"
  /api/model/collectionCard/findUnique:
    get:
      operationId: findUniqueCollectionCard
      description: Find one unique CollectionCard
      tags:
        - collectionCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/CollectionCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionCardFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collectionCard/findFirst:
    get:
      operationId: findFirstCollectionCard
      description: Find the first CollectionCard matching the given condition
      tags:
        - collectionCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/CollectionCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionCardFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collectionCard/findMany:
    get:
      operationId: findManyCollectionCard
      description: Find a list of CollectionCard
      tags:
        - collectionCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CollectionCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionCardFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collectionCard/update:
    patch:
      operationId: updateCollectionCard
      description: Update a CollectionCard
      tags:
        - collectionCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/CollectionCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionCardUpdateArgs"
  /api/model/collectionCard/updateMany:
    patch:
      operationId: updateManyCollectionCard
      description: Update CollectionCards matching the given condition
      tags:
        - collectionCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionCardUpdateManyArgs"
  /api/model/collectionCard/upsert:
    post:
      operationId: upsertCollectionCard
      description: Upsert a CollectionCard
      tags:
        - collectionCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/CollectionCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionCardUpsertArgs"
  /api/model/collectionCard/delete:
    delete:
      operationId: deleteCollectionCard
      description: Delete one unique CollectionCard
      tags:
        - collectionCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/CollectionCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionCardDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collectionCard/deleteMany:
    delete:
      operationId: deleteManyCollectionCard
      description: Delete CollectionCards matching the given condition
      tags:
        - collectionCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionCardDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collectionCard/count:
    get:
      operationId: countCollectionCard
      description: Find a list of CollectionCard
      tags:
        - collectionCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/CollectionCardCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionCardCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collectionCard/aggregate:
    get:
      operationId: aggregateCollectionCard
      description: Aggregate CollectionCards
      tags:
        - collectionCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateCollectionCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionCardAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/collectionCard/groupBy:
    get:
      operationId: groupByCollectionCard
      description: Group CollectionCards by fields
      tags:
        - collectionCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CollectionCardGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionCardGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiSet/create:
    post:
      operationId: createTcgApiSet
      description: Create a new TcgApiSet
      tags:
        - tcgApiSet
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TcgApiSet"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TcgApiSetCreateArgs"
  /api/model/tcgApiSet/createMany:
    post:
      operationId: createManyTcgApiSet
      description: Create several TcgApiSet
      tags:
        - tcgApiSet
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TcgApiSetCreateManyArgs"
  /api/model/tcgApiSet/findUnique:
    get:
      operationId: findUniqueTcgApiSet
      description: Find one unique TcgApiSet
      tags:
        - tcgApiSet
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TcgApiSet"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiSetFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiSet/findFirst:
    get:
      operationId: findFirstTcgApiSet
      description: Find the first TcgApiSet matching the given condition
      tags:
        - tcgApiSet
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TcgApiSet"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiSetFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiSet/findMany:
    get:
      operationId: findManyTcgApiSet
      description: Find a list of TcgApiSet
      tags:
        - tcgApiSet
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TcgApiSet"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiSetFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiSet/update:
    patch:
      operationId: updateTcgApiSet
      description: Update a TcgApiSet
      tags:
        - tcgApiSet
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TcgApiSet"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TcgApiSetUpdateArgs"
  /api/model/tcgApiSet/updateMany:
    patch:
      operationId: updateManyTcgApiSet
      description: Update TcgApiSets matching the given condition
      tags:
        - tcgApiSet
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TcgApiSetUpdateManyArgs"
  /api/model/tcgApiSet/upsert:
    post:
      operationId: upsertTcgApiSet
      description: Upsert a TcgApiSet
      tags:
        - tcgApiSet
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TcgApiSet"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TcgApiSetUpsertArgs"
  /api/model/tcgApiSet/delete:
    delete:
      operationId: deleteTcgApiSet
      description: Delete one unique TcgApiSet
      tags:
        - tcgApiSet
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TcgApiSet"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiSetDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiSet/deleteMany:
    delete:
      operationId: deleteManyTcgApiSet
      description: Delete TcgApiSets matching the given condition
      tags:
        - tcgApiSet
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiSetDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiSet/count:
    get:
      operationId: countTcgApiSet
      description: Find a list of TcgApiSet
      tags:
        - tcgApiSet
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/TcgApiSetCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiSetCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiSet/aggregate:
    get:
      operationId: aggregateTcgApiSet
      description: Aggregate TcgApiSets
      tags:
        - tcgApiSet
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateTcgApiSet"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiSetAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiSet/groupBy:
    get:
      operationId: groupByTcgApiSet
      description: Group TcgApiSets by fields
      tags:
        - tcgApiSet
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TcgApiSetGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiSetGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiCard/create:
    post:
      operationId: createTcgApiCard
      description: Create a new TcgApiCard
      tags:
        - tcgApiCard
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TcgApiCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TcgApiCardCreateArgs"
  /api/model/tcgApiCard/createMany:
    post:
      operationId: createManyTcgApiCard
      description: Create several TcgApiCard
      tags:
        - tcgApiCard
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TcgApiCardCreateManyArgs"
  /api/model/tcgApiCard/findUnique:
    get:
      operationId: findUniqueTcgApiCard
      description: Find one unique TcgApiCard
      tags:
        - tcgApiCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TcgApiCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiCardFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiCard/findFirst:
    get:
      operationId: findFirstTcgApiCard
      description: Find the first TcgApiCard matching the given condition
      tags:
        - tcgApiCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TcgApiCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiCardFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiCard/findMany:
    get:
      operationId: findManyTcgApiCard
      description: Find a list of TcgApiCard
      tags:
        - tcgApiCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TcgApiCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiCardFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiCard/update:
    patch:
      operationId: updateTcgApiCard
      description: Update a TcgApiCard
      tags:
        - tcgApiCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TcgApiCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TcgApiCardUpdateArgs"
  /api/model/tcgApiCard/updateMany:
    patch:
      operationId: updateManyTcgApiCard
      description: Update TcgApiCards matching the given condition
      tags:
        - tcgApiCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TcgApiCardUpdateManyArgs"
  /api/model/tcgApiCard/upsert:
    post:
      operationId: upsertTcgApiCard
      description: Upsert a TcgApiCard
      tags:
        - tcgApiCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TcgApiCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TcgApiCardUpsertArgs"
  /api/model/tcgApiCard/delete:
    delete:
      operationId: deleteTcgApiCard
      description: Delete one unique TcgApiCard
      tags:
        - tcgApiCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TcgApiCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiCardDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiCard/deleteMany:
    delete:
      operationId: deleteManyTcgApiCard
      description: Delete TcgApiCards matching the given condition
      tags:
        - tcgApiCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiCardDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiCard/count:
    get:
      operationId: countTcgApiCard
      description: Find a list of TcgApiCard
      tags:
        - tcgApiCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/TcgApiCardCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiCardCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiCard/aggregate:
    get:
      operationId: aggregateTcgApiCard
      description: Aggregate TcgApiCards
      tags:
        - tcgApiCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateTcgApiCard"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiCardAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /api/model/tcgApiCard/groupBy:
    get:
      operationId: groupByTcgApiCard
      description: Group TcgApiCards by fields
      tags:
        - tcgApiCard
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TcgApiCardGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TcgApiCardGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
