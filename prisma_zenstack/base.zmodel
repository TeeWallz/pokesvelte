import "../schema"

model Account {
  id String @id @default(cuid())
  userId String
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.Text
  access_token String? @db.Text
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.Text
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])

  @@schema("base")
}

model Session {
  id String @id @default(cuid())
  sessionToken String @unique
  userId String
  expires DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("base")
}

model User {
  id String @id @default(cuid())
  name String?
  email String? @unique
  password String? @password @omit
  emailVerified DateTime?
  image String?
  accounts Account[]
  sessions Session[]
  spaces SpaceUser[]
  todos Todo[]
  lists List[]
  collection Collection[]

  @@allow('create,read', true)
  @@allow('all', auth() == this)

  @@schema("base")
}

model VerificationToken {
  identifier String
  token String @unique
  expires DateTime

  @@unique([identifier, token])

  @@schema("base")
}
